Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.1.144 Build 20181018

Compiler options: -O2 -qopt-report-phase=vec -qopt-report=5

Begin optimization report for: Free4D(complex128_t ****, const int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at arrayfuns.c(41,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at arrayfuns.c(42,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at arrayfuns.c(43,4)
         remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ arrayfuns.c(44,5) ]
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Free2D(complex128_t **, const int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at arrayfuns.c(54,2)
   remark #15527: loop was not vectorized: function call to free(void *) cannot be vectorized   [ arrayfuns.c(55,3) ]
LOOP END
===========================================================================

Begin optimization report for: Print4D(complex128_t ****, const int *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at arrayfuns.c(61,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ arrayfuns.c(64,5) ]

   LOOP BEGIN at arrayfuns.c(62,3)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ arrayfuns.c(64,5) ]

      LOOP BEGIN at arrayfuns.c(63,4)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ arrayfuns.c(64,5) ]

         LOOP BEGIN at arrayfuns.c(64,5)
            remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Print2D(complex128_t **, const int *)

    Report from: Vector optimizations [vec]



Non-optimizable loops:


LOOP BEGIN at arrayfuns.c(72,2)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ arrayfuns.c(73,3) ]

   LOOP BEGIN at arrayfuns.c(73,3)
      remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Initialize2D(complex128_t **, const int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at arrayfuns.c(31,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at arrayfuns.c(33,3)
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.300 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at arrayfuns.c(33,3)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Initialize4D(complex128_t ****, const int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at arrayfuns.c(14,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at arrayfuns.c(16,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at arrayfuns.c(18,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at arrayfuns.c(20,5)
            remark #15382: vectorization support: call to function rand(void) cannot be vectorized   [ arrayfuns.c(21,32) ]
            remark #15382: vectorization support: call to function rand(void) cannot be vectorized   [ arrayfuns.c(21,60) ]
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between call:rand(void) (21:32) and call:rand(void) (21:60)
            remark #15346: vector dependence: assumed OUTPUT dependence between call:rand(void) (21:60) and call:rand(void) (21:32)
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================
