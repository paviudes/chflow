backend/main.c:321:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:285:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:280:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:250:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:251:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:239:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed

backend/main.c:218:4: note: Unknown misalignment, naturally aligned
backend/main.c:218:4: note: Unknown misalignment, naturally aligned
backend/main.c:218:4: note: not ssa-name.
backend/main.c:218:4: note: use not simple.
backend/main.c:218:4: note: not ssa-name.
backend/main.c:218:4: note: use not simple.
backend/main.c:218:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/main.c:211:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:111:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:112:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed

backend/main.c:79:4: note: Unknown misalignment, naturally aligned
backend/main.c:79:4: note: Unknown misalignment, naturally aligned
backend/main.c:79:4: note: not ssa-name.
backend/main.c:79:4: note: use not simple.
backend/main.c:79:4: note: not ssa-name.
backend/main.c:79:4: note: use not simple.
backend/main.c:79:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/main.c:75:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed

backend/main.c:56:4: note: Unknown misalignment, naturally aligned
backend/main.c:56:4: note: Unknown misalignment, naturally aligned
backend/main.c:56:4: note: not ssa-name.
backend/main.c:56:4: note: use not simple.
backend/main.c:56:4: note: not ssa-name.
backend/main.c:56:4: note: use not simple.
backend/main.c:56:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/main.c:52:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:27:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/main.c:21:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:28:12: note: not vectorized: not enough data-refs in basic block.
backend/main.c:27:2: note: not vectorized: not enough data-refs in basic block.
backend/main.c:34:2: note: not vectorized: not enough data-refs in basic block.
backend/main.c:37:2: note: not vectorized: not enough data-refs in basic block.
backend/main.c:39:2: note: not vectorized: not enough data-refs in basic block.
backend/main.c:41:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:44:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:53:15: note: not vectorized: not enough data-refs in basic block.
backend/main.c:52:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:52:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:57:13: note: not vectorized: no vectype for stmt: vect__26.16_1132 = MEM[(double *)vectp_dist.14_1145];
 scalar_type: vector(2) double
backend/main.c:57:13: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_dist.18_1118] = vect__30.17_1120;
 scalar_type: vector(2) double
backend/main.c:57:13: note: not vectorized: no grouped stores in basic block.
backend/main.c:66:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:73:12: note: not vectorized: not enough data-refs in basic block.
backend/main.c:75:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:75:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:80:13: note: not vectorized: no vectype for stmt: vect__41.10_1189 = MEM[(double *)vectp_dist.8_1195];
 scalar_type: vector(2) double
backend/main.c:80:13: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_dist.12_1162] = vect__43.11_1171;
 scalar_type: vector(2) double
backend/main.c:80:13: note: not vectorized: no grouped stores in basic block.
backend/main.c:83:4: note: misalign = 0 bytes of ref window[0]
backend/main.c:83:4: note: misalign = 0 bytes of ref searchin[0]
backend/main.c:84:4: note: not consecutive access _44 = window[0];
backend/main.c:84:4: note: not vectorized: no grouped stores in basic block.
backend/main.c:16:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:96:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:98:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:102:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:108:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:112:4: note: not consecutive access _57 = *_56;
backend/main.c:112:4: note: Build SLP failed: different types
backend/main.c:111:3: note: not vectorized: not enough data-refs in basic block.
backend/main.c:113:8: note: not vectorized: not enough data-refs in basic block.
backend/main.c:114:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:114:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:118:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:124:16: note: not vectorized: not enough data-refs in basic block.
backend/main.c:123:5: note: not vectorized: no vectype for stmt: MEM[(complex double *)_66] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/main.c:123:5: note: not vectorized: no vectype for stmt: MEM[(complex double *)_66 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/main.c:123:5: note: not vectorized: no vectype for stmt: MEM[(complex double *)_66 + 32B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/main.c:123:5: note: not vectorized: no vectype for stmt: MEM[(complex double *)_66 + 48B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/main.c:123:5: note: not consecutive access _1173 = *_1172;
backend/main.c:123:5: note: not consecutive access *_65 = _66;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66]> = _256;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66]> = _734;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66]> = _580;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66]> = _267;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66]> = _733;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66]> = _249;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 16B]> = _933;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 16B]> = _954;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 16B]> = _597;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 16B]> = _273;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 16B]> = _949;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 16B]> = _595;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 32B]> = _319;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 32B]> = _303;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 32B]> = _283;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 32B]> = _318;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 32B]> = _300;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 32B]> = _282;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 48B]> = _727;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 48B]> = _1269;
backend/main.c:123:5: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_66 + 48B]> = _1362;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 48B]> = _742;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 48B]> = _1264;
backend/main.c:123:5: note: not consecutive access IMAGPART_EXPR <MEM[(complex double *)_66 + 48B]> = _1213;
backend/main.c:123:5: note: not consecutive access _582 = REALPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _579 = REALPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _281 = REALPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _248 = IMAGPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _158 = IMAGPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _567 = IMAGPART_EXPR <*_1173>;
backend/main.c:123:5: note: not consecutive access _263 = REALPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _776 = REALPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _174 = REALPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _919 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _767 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _1232 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 16B]>;
backend/main.c:123:5: note: not consecutive access _939 = REALPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _316 = REALPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _757 = REALPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _274 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _313 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _585 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 32B]>;
backend/main.c:123:5: note: not consecutive access _940 = REALPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: not consecutive access _298 = REALPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: not consecutive access _1305 = REALPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: not consecutive access _935 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: not consecutive access _295 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: not consecutive access _1263 = IMAGPART_EXPR <MEM[(complex double *)_1173 + 48B]>;
backend/main.c:123:5: note: Build SLP failed: not grouped load _260 = REALPART_EXPR <_1182>;
backend/main.c:123:5: note: can't determine dependence between REALPART_EXPR <MEM[(complex double *)_66]> and REALPART_EXPR <MEM[(complex double *)_1173 + 16B]>
backend/main.c:133:8: note: not vectorized: not enough data-refs in basic block.
backend/main.c:139:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:138:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:143:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:143:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:147:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:153:16: note: not vectorized: not enough data-refs in basic block.
backend/main.c:152:5: note: not consecutive access _764 = *_763;
backend/main.c:152:5: note: not consecutive access *_93 = _94;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1255 = IMAGPART_EXPR <*_764>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1205 = REALPART_EXPR <MEM[(complex double *)_764 + 16B]>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1249 = IMAGPART_EXPR <MEM[(complex double *)_764 + 16B]>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1200 = REALPART_EXPR <*_811>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1235 = IMAGPART_EXPR <MEM[(complex double *)_764 + 32B]>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1388 = REALPART_EXPR <*_830>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1389 = IMAGPART_EXPR <MEM[(complex double *)_764 + 48B]>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1200 = REALPART_EXPR <*_811>;
backend/main.c:152:5: note: Build SLP failed: different interleaving chains in one node _1388 = REALPART_EXPR <*_830>;
backend/main.c:159:8: note: not vectorized: not enough data-refs in basic block.
backend/main.c:165:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:164:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:169:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:169:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:173:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:178:5: note: not consecutive access _119 = *_118;
backend/main.c:178:5: note: not consecutive access _122 = REALPART_EXPR <*_121>;
backend/main.c:178:5: note: not vectorized: no grouped stores in basic block.
backend/main.c:182:16: note: not vectorized: not enough data-refs in basic block.
backend/main.c:181:5: note: not consecutive access _704 = *_703;
backend/main.c:181:5: note: not consecutive access *_125 = _126;
backend/main.c:181:5: note: not consecutive access IMAGPART_EXPR <*_138> = 0.0;
backend/main.c:181:5: note: can't determine dependence between REALPART_EXPR <MEM[(complex double *)_126]> and REALPART_EXPR <MEM[(complex double *)_704 + 16B]>
backend/main.c:189:8: note: not vectorized: not enough data-refs in basic block.
backend/main.c:195:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:194:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:199:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:199:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:203:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:208:7: note: not vectorized: not enough data-refs in basic block.
backend/main.c:208:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:212:15: note: not vectorized: not enough data-refs in basic block.
backend/main.c:211:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:217:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:219:13: note: not vectorized: no vectype for stmt: vect__154.4_1220 = MEM[(double *)vectp_dist.2_1223];
 scalar_type: vector(2) double
backend/main.c:219:13: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_dist.6_1209] = vect__155.5_1211;
 scalar_type: vector(2) double
backend/main.c:219:13: note: not vectorized: no grouped stores in basic block.
backend/main.c:228:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:230:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:240:18: note: not vectorized: not enough data-refs in basic block.
backend/main.c:239:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:241:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:242:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:243:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:244:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:245:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:246:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:251:5: note: Build SLP failed: different types
backend/main.c:250:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:252:9: note: not vectorized: not enough data-refs in basic block.
backend/main.c:256:15: note: not vectorized: not enough data-refs in basic block.
backend/main.c:255:4: note: not consecutive access _921 = *_920;
backend/main.c:255:4: note: not consecutive access *_187 = _188;
backend/main.c:255:4: note: not consecutive access _209 = REALPART_EXPR <*_208>;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1016 = REALPART_EXPR <_1035>;
backend/main.c:255:4: note: original stmt _1129 = _1124 + _1313;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1013 = IMAGPART_EXPR <_1035>;
backend/main.c:255:4: note: original stmt _1129 = _1124 + _1313;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1391 = IMAGPART_EXPR <_1098>;
backend/main.c:255:4: note: original stmt _1129 = _1124 + _1313;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1207 = REALPART_EXPR <_1161>;
backend/main.c:255:4: note: original stmt _1129 = _1124 + _1313;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1202 = IMAGPART_EXPR <_1161>;
backend/main.c:255:4: note: original stmt _1129 = _1124 + _1313;
backend/main.c:255:4: note: Build SLP failed: not grouped load _1124 = REALPART_EXPR <_958>;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1095 = REALPART_EXPR <_1007>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1093 = IMAGPART_EXPR <_1007>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _722 = REALPART_EXPR <_1070>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _833 = IMAGPART_EXPR <_1070>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1314 = REALPART_EXPR <_1133>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: different operation in stmt _1303 = IMAGPART_EXPR <_1133>;
backend/main.c:255:4: note: original stmt _1300 = _1326 + 0.0;
backend/main.c:255:4: note: Build SLP failed: not grouped load _1326 = REALPART_EXPR <_930>;
backend/main.c:255:4: note: Build SLP failed: not grouped load _1318 = REALPART_EXPR <_944>;
backend/main.c:255:4: note: Build SLP failed: not grouped load _1151 = REALPART_EXPR <_972>;
backend/main.c:264:4: note: not consecutive access _304 = *_29;
backend/main.c:264:4: note: not ssa-name.
backend/main.c:264:4: note: use not simple.
backend/main.c:264:4: note: not ssa-name.
backend/main.c:264:4: note: use not simple.
backend/main.c:264:4: note: not vectorized: vectorization is not profitable.
backend/main.c:281:5: note: not consecutive access _226 = *_225;
backend/main.c:281:5: note: not consecutive access _224 = *_223;
backend/main.c:281:5: note: not vectorized: no grouped stores in basic block.
backend/main.c:280:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:286:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:285:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:290:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:289:4: note: not vectorized: not enough data-refs in basic block.
backend/main.c:297:5: note: not vectorized: not enough data-refs in basic block.
backend/main.c:302:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:306:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:310:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:314:6: note: not vectorized: not enough data-refs in basic block.
backend/main.c:322:3: note: not vectorized: not enough data-refs in basic block.
backend/main.c:321:2: note: not vectorized: not enough data-refs in basic block.
backend/main.c:325:2: note: not vectorized: not enough data-refs in basic block.

backend/sampling.c:21:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:21:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:21:2: note: not ssa-name.
backend/sampling.c:21:2: note: use not simple.
backend/sampling.c:21:2: note: not ssa-name.
backend/sampling.c:21:2: note: use not simple.
backend/sampling.c:21:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:14:2: note: step unknown.
backend/sampling.c:14:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:14:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:14:2: note: reduc op not supported by target.
backend/sampling.c:14:2: note: reduc op not supported by target.
backend/sampling.c:14:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:24:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:24:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:24:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:24:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:8: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_impdist.14_94] = vect_cst__93;
 scalar_type: vector(2) double
backend/sampling.c:19:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:28: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:16:17: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:22:14: note: not vectorized: no vectype for stmt: vect__17.6_13 = MEM[(double *)vectp_impdist.4_11];
 scalar_type: vector(2) double
backend/sampling.c:22:14: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_impdist.8_65] = vect__19.7_64;
 scalar_type: vector(2) double
backend/sampling.c:22:14: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:22:14: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:21:28: note: not consecutive access _18 = *_21;
backend/sampling.c:21:28: note: not consecutive access *_21 = _40;
backend/sampling.c:21:28: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:30:2: note: not vectorized, possible dependence between data-refs backend/sampling.c:30:2: note: bad data dependence.
backend/sampling.c:30:2: note: not consecutive access _1 = *dist_14(D);
backend/sampling.c:30:2: note: not consecutive access *cumul_15(D) = _1;
backend/sampling.c:30:2: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:30:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:30:2: note: not consecutive access _8 = *_7;
backend/sampling.c:30:2: note: not consecutive access *_9 = _10;
backend/sampling.c:30:2: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:32:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:41:26: note: not vectorized: control flow in loop.
backend/sampling.c:41:26: note: bad loop form.
backend/sampling.c:41:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:42:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:42:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:41:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:41:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:50:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:51:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:51:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:69:57: note: not vectorized: multiple nested loops.
backend/sampling.c:69:57: note: bad loop form.
backend/sampling.c:103:4: note: not vectorized: control flow in loop.
backend/sampling.c:103:4: note: bad loop form.

backend/sampling.c:21:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:21:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:21:2: note: not ssa-name.
backend/sampling.c:21:2: note: use not simple.
backend/sampling.c:21:2: note: not ssa-name.
backend/sampling.c:21:2: note: use not simple.
backend/sampling.c:21:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:14:2: note: step unknown.
backend/sampling.c:14:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:14:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:14:2: note: reduc op not supported by target.
backend/sampling.c:14:2: note: reduc op not supported by target.
backend/sampling.c:14:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/sampling.c:87:3: note: not vectorized: control flow in loop.
backend/sampling.c:87:3: note: bad loop form.
backend/sampling.c:74:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:74:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:72:14: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:70:22: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:74:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:75:11: note: not vectorized: no vectype for stmt: MEM[(int *)vectp_incl.77_214] = { 1, 1, 1, 1 };
 scalar_type: vector(4) int
backend/sampling.c:75:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:75:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:74:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:74:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:74:26: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:23: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:87:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:88:7: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:89:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:87:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:91:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:98:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:8: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_powerdist.70_90] = { 1.0e+0, 1.0e+0 };
 scalar_type: vector(2) double
backend/sampling.c:19:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:28: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:16:17: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:14:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:22:14: note: not vectorized: no vectype for stmt: vect__103.62_7 = MEM[(double *)vectp_powerdist.60_23];
 scalar_type: vector(2) double
backend/sampling.c:22:14: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_powerdist.64_176] = vect__105.63_175;
 scalar_type: vector(2) double
backend/sampling.c:22:14: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:22:14: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:21:28: note: not consecutive access _74 = *_82;
backend/sampling.c:21:28: note: not consecutive access *_82 = _51;
backend/sampling.c:21:28: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:104:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:105:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:103:4: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:103:4: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:50:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:53:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:114:17: note: not consecutive access pretmp_171 = *searchin_35(D);
backend/sampling.c:114:17: note: not consecutive access MEM[(double *)searchin_35(D) + 8B] = exponent_134;
backend/sampling.c:114:17: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:120:17: note: not consecutive access pretmp_173 = MEM[(double *)searchin_35(D) + 8B];
backend/sampling.c:120:17: note: not consecutive access *searchin_35(D) = exponent_134;
backend/sampling.c:120:17: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:97:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:131:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:84:25: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:84:25: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:103:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:37:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:37:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:12:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:10:18: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:10:16: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:13:24: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:15:28: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:15:28: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:12:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_11 = __complex__ (1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_11 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_12 = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_12 + 16B] = __complex__ (1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_14 = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_14 + 16B] = __complex__ (1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_15 = __complex__ (1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_15 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_17 = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_17 + 16B] = __complex__ (-0.0, -1.0e+0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_18 = __complex__ (0.0, 1.0e+0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_18 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_20 = __complex__ (1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_20 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: *_21 = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not vectorized: no vectype for stmt: MEM[(complex double *)_21 + 16B] = __complex__ (-1.0e+0, 0.0);
 scalar_type: complex double
backend/constants.c:34:20: note: not consecutive access consts_117(D)->nclifford = 24;
backend/constants.c:34:20: note: not vectorized: no grouped stores in basic block.
backend/constants.c:36:26: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:36:24: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:38:30: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:37:3: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:36:24: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:38:30: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:37:3: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:102:20: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:104:28: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 32B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 48B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 64B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 80B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 96B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 112B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 128B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 144B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 160B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 176B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 192B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 208B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 224B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_85 + 240B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/constants.c:103:2: note: not consecutive access *_84 = _85;
backend/constants.c:103:2: note: not vectorized: no grouped stores in basic block.
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_89 + 16B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_89 + 64B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_89 + 176B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_90 + 32B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_90 + 128B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_90 + 208B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_91 + 48B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_91 + 96B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_91 + 192B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_92 + 16B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_92 + 64B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_92 + 224B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: *_93 = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_93 + 80B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_94 + 96B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_94 + 144B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_94 + 192B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_95 + 32B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_95 + 112B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_95 + 208B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_96 + 32B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_96 + 112B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_96 + 128B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_97 + 48B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_97 + 96B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_97 + 144B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: *_98 = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_98 + 160B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_99 + 64B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_99 + 176B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_99 + 224B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_100 + 48B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_100 + 144B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_100 + 192B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_101 + 112B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_101 + 128B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_101 + 208B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_102 + 16B] = __complex__ (0.0, 2.5e-1);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_102 + 176B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_102 + 224B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: *_103 = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no vectype for stmt: MEM[(complex double *)_103 + 240B] = __complex__ (2.5e-1, 0.0);
 scalar_type: complex double
backend/constants.c:123:1: note: not vectorized: no grouped stores in basic block.
backend/constants.c:140:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:134:2: note: not vectorized: control flow in loop.
backend/constants.c:134:2: note: bad loop form.
backend/constants.c:135:3: note: not vectorized: number of iterations cannot be computed.
backend/constants.c:135:3: note: bad loop form.
backend/constants.c:128:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/constants.c:130:4: note: not consecutive access _69 = *_68;
backend/constants.c:130:4: note: not consecutive access _65 = consts_49(D)->pauli;
backend/constants.c:130:4: note: not consecutive access _73 = *_69;
backend/constants.c:130:4: note: not vectorized: no grouped stores in basic block.
backend/constants.c:130:4: note: not consecutive access _82 = *_81;
backend/constants.c:130:4: note: not consecutive access _78 = consts_49(D)->pauli;
backend/constants.c:130:4: note: not consecutive access _86 = MEM[(complex double * *)_82 + 8B];
backend/constants.c:130:4: note: not vectorized: no grouped stores in basic block.
backend/constants.c:131:3: note: not consecutive access _14 = *_13;
backend/constants.c:131:3: note: not consecutive access _10 = consts_49(D)->pauli;
backend/constants.c:131:3: note: not vectorized: no grouped stores in basic block.
backend/constants.c:128:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:133:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:136:4: note: not consecutive access _24 = *_23;
backend/constants.c:136:4: note: not consecutive access _20 = *_19;
backend/constants.c:136:4: note: not consecutive access _16 = consts_49(D)->algebra;
backend/constants.c:136:4: note: not vectorized: no grouped stores in basic block.
backend/constants.c:135:3: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:137:3: note: not consecutive access _30 = *_29;
backend/constants.c:137:3: note: not consecutive access _26 = consts_49(D)->algebra;
backend/constants.c:137:3: note: not vectorized: no grouped stores in basic block.
backend/constants.c:134:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:135:3: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:139:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:141:3: note: not consecutive access _36 = *_35;
backend/constants.c:141:3: note: not consecutive access _32 = consts_49(D)->choitochi;
backend/constants.c:141:3: note: not vectorized: no grouped stores in basic block.
backend/constants.c:140:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:143:2: note: not vectorized: not enough data-refs in basic block.
backend/constants.c:144:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:10:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:10:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:11:3: note: not vectorized: no grouped stores in basic block.
backend/printfuns.c:10:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:14:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:21:2: note: not vectorized: control flow in loop.
backend/printfuns.c:21:2: note: bad loop form.
backend/printfuns.c:22:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:21:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:23:59: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:23:4: note: not consecutive access _4 = *_3;
backend/printfuns.c:23:4: note: not vectorized: no grouped stores in basic block.
backend/printfuns.c:22:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:21:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:22:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:27:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:34:2: note: not vectorized: control flow in loop.
backend/printfuns.c:34:2: note: bad loop form.
backend/printfuns.c:35:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:34:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:36:27: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:36:4: note: not consecutive access _4 = *_3;
backend/printfuns.c:36:4: note: not consecutive access _8 = *_7;
backend/printfuns.c:36:4: note: not vectorized: no grouped stores in basic block.
backend/printfuns.c:35:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:34:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:35:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:40:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:47:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:47:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:48:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:47:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:51:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:58:2: note: not vectorized: control flow in loop.
backend/printfuns.c:58:2: note: bad loop form.
backend/printfuns.c:59:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:58:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:60:27: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:60:4: note: not consecutive access _8 = *_7;
backend/printfuns.c:60:4: note: not consecutive access _4 = *_3;
backend/printfuns.c:60:4: note: not vectorized: no grouped stores in basic block.
backend/printfuns.c:59:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:58:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:59:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:64:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:71:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:71:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:72:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:71:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:75:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:82:2: note: not vectorized: control flow in loop.
backend/printfuns.c:82:2: note: bad loop form.
backend/printfuns.c:83:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:82:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:84:28: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:84:4: note: not consecutive access _4 = *_3;
backend/printfuns.c:84:4: note: not consecutive access _8 = *_7;
backend/printfuns.c:84:4: note: not vectorized: no grouped stores in basic block.
backend/printfuns.c:83:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:82:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:83:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:88:1: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:95:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/printfuns.c:95:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:96:3: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:95:2: note: not vectorized: not enough data-refs in basic block.
backend/printfuns.c:99:1: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized, possible dependence between data-refs backend/mt19937/mt19937ar.c:60:3: note: bad data dependence.
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access _28 = MEM[(long unsigned int *)&mt];
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access mt[0] = _1;
backend/mt19937/mt19937ar.c:59:8: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:70:1: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:90:3: note: not vectorized: not suitable for gather load _16 = mt[i_86];
backend/mt19937/mt19937ar.c:90:3: note: bad data references.
backend/mt19937/mt19937ar.c:90:3: note: not consecutive access mt[0] = _ifc__122;
backend/mt19937/mt19937ar.c:90:3: note: not consecutive access _16 = mt[i_86];
backend/mt19937/mt19937ar.c:90:3: note: not consecutive access mt[i_86] = _25;
backend/mt19937/mt19937ar.c:90:3: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:82:3: note: not vectorized: not suitable for gather load _1 = mt[i_85];
backend/mt19937/mt19937ar.c:82:3: note: bad data references.
backend/mt19937/mt19937ar.c:82:3: note: not consecutive access _11 = *_10;
backend/mt19937/mt19937ar.c:82:3: note: not consecutive access mt[0] = _ifc__83;
backend/mt19937/mt19937ar.c:82:3: note: not consecutive access _1 = mt[i_85];
backend/mt19937/mt19937ar.c:82:3: note: not consecutive access mt[i_85] = _14;
backend/mt19937/mt19937ar.c:82:3: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized, possible dependence between data-refs backend/mt19937/mt19937ar.c:60:3: note: bad data dependence.
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access _93 = MEM[(long unsigned int *)&mt];
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access mt[0] = 19650218;
backend/mt19937/mt19937ar.c:59:8: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:81:5: note: not consecutive access pretmp_179 = mt[0];
backend/mt19937/mt19937ar.c:81:5: note: not consecutive access mti = 624;
backend/mt19937/mt19937ar.c:81:5: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:87:8: note: not consecutive access _107 = *_108;
backend/mt19937/mt19937ar.c:87:8: note: not consecutive access _115 = mt[i_120];
backend/mt19937/mt19937ar.c:87:8: note: not consecutive access mt[i_120] = _104;
backend/mt19937/mt19937ar.c:87:8: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:87:23: note: not consecutive access _100 = mt[623];
backend/mt19937/mt19937ar.c:87:23: note: not consecutive access mt[0] = _100;
backend/mt19937/mt19937ar.c:87:23: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:88:8: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:82:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:95:8: note: not consecutive access _142 = mt[i_167];
backend/mt19937/mt19937ar.c:95:8: note: not consecutive access mt[i_167] = _135;
backend/mt19937/mt19937ar.c:95:8: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:95:23: note: not consecutive access _132 = mt[623];
backend/mt19937/mt19937ar.c:95:23: note: not consecutive access mt[0] = _132;
backend/mt19937/mt19937ar.c:95:23: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:90:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:99:1: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:118:5: note: not vectorized: not suitable for gather load _25 = mag01[_24];
backend/mt19937/mt19937ar.c:118:5: note: bad data references.
backend/mt19937/mt19937ar.c:114:5: note: not vectorized: not suitable for gather load _13 = mag01[_12];
backend/mt19937/mt19937ar.c:114:5: note: bad data references.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized, possible dependence between data-refs backend/mt19937/mt19937ar.c:60:3: note: bad data dependence.
backend/mt19937/mt19937ar.c:108:6: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:108:6: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:111:8: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access _156 = MEM[(long unsigned int *)&mt];
backend/mt19937/mt19937ar.c:59:8: note: not consecutive access mt[0] = 5489;
backend/mt19937/mt19937ar.c:59:8: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:60:3: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:114:5: note: not consecutive access mt[kk_88] = _14;
backend/mt19937/mt19937ar.c:114:5: note: not consecutive access _13 = mag01[_12];
backend/mt19937/mt19937ar.c:114:5: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:114:5: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:118:5: note: not consecutive access mt[kk_89] = _26;
backend/mt19937/mt19937ar.c:118:5: note: not consecutive access _25 = mag01[_24];
backend/mt19937/mt19937ar.c:118:5: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:125:9: note: not consecutive access mt[623] = _36;
backend/mt19937/mt19937ar.c:125:9: note: not consecutive access mti = 0;
backend/mt19937/mt19937ar.c:125:9: note: not consecutive access _35 = mag01[_34];
backend/mt19937/mt19937ar.c:125:9: note: not vectorized: no grouped stores in basic block.
backend/mt19937/mt19937ar.c:136:10: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:142:10: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:148:25: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:155:25: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:162:43: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:169:41: note: not vectorized: not enough data-refs in basic block.
backend/mt19937/mt19937ar.c:170:25: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:25:20: note: not vectorized: control flow in loop.
backend/checks.c:25:20: note: bad loop form.
backend/checks.c:24:7: note: not vectorized: control flow in loop.
backend/checks.c:24:7: note: bad loop form.
backend/checks.c:22:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:24:7: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:25:8: note: not consecutive access _8 = *_7;
backend/checks.c:25:8: note: not consecutive access _4 = *_3;
backend/checks.c:25:8: note: not vectorized: no grouped stores in basic block.
backend/checks.c:23:3: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:22:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:25:20: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:25:20: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:38:2: note: Unknown def-use cycle pattern.
backend/checks.c:38:2: note: Unsupported pattern.
backend/checks.c:38:2: note: not vectorized: unsupported use in stmt.
backend/checks.c:38:2: note: unexpected pattern.
backend/checks.c:38:2: note: not vectorized: no grouped stores in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:45:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:46:9: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:56:17: note: not vectorized: control flow in loop.
backend/checks.c:56:17: note: bad loop form.
backend/checks.c:56:7: note: not consecutive access _36 = *choi_21(D);
backend/checks.c:56:7: note: not consecutive access _112 = *_113;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _97 = MEM[(complex double * *)choi_21(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _72 = MEM[(complex double * *)choi_21(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _50 = MEM[(complex double * *)choi_21(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _8 = *_9;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _119 = MEM[(complex double * *)choi_21(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _129 = MEM[(complex double * *)choi_21(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _139 = MEM[(complex double * *)choi_21(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _154 = *_153;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _167 = MEM[(complex double * *)choi_21(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _177 = MEM[(complex double * *)choi_21(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _187 = MEM[(complex double * *)choi_21(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _29 = *_28;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:54:23: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:56:7: note: not consecutive access _55 = MEM[(complex double * *)choi_21(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _74 = MEM[(complex double * *)choi_21(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _93 = MEM[(complex double * *)choi_21(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:69:2: note: not vectorized: not suitable for gather load _29 = REALPART_EXPR <*_6>;
backend/checks.c:69:2: note: bad data references.
backend/checks.c:71:2: note: not vectorized: no grouped stores in basic block.
backend/checks.c:72:5: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:73:10: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:73:10: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:69:2: note: not vectorized: not suitable for gather load _19 = REALPART_EXPR <*_56>;
backend/checks.c:69:2: note: bad data references.
backend/checks.c:38:2: note: Unknown def-use cycle pattern.
backend/checks.c:38:2: note: Unsupported pattern.
backend/checks.c:38:2: note: not vectorized: unsupported use in stmt.
backend/checks.c:38:2: note: unexpected pattern.
backend/checks.c:38:2: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:17: note: not vectorized: control flow in loop.
backend/checks.c:56:17: note: bad loop form.
backend/checks.c:56:7: note: not consecutive access _85 = *choi_6(D);
backend/checks.c:56:7: note: not consecutive access _185 = *_184;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _204 = MEM[(complex double * *)choi_6(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _214 = MEM[(complex double * *)choi_6(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _224 = MEM[(complex double * *)choi_6(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _239 = *_238;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _252 = MEM[(complex double * *)choi_6(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _262 = MEM[(complex double * *)choi_6(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _272 = MEM[(complex double * *)choi_6(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _287 = *_286;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _300 = MEM[(complex double * *)choi_6(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _310 = MEM[(complex double * *)choi_6(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _320 = MEM[(complex double * *)choi_6(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _78 = *_77;
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:54:23: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:56:7: note: not consecutive access _104 = MEM[(complex double * *)choi_6(D) + 8B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _123 = MEM[(complex double * *)choi_6(D) + 16B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:56:7: note: not consecutive access _142 = MEM[(complex double * *)choi_6(D) + 24B];
backend/checks.c:56:7: note: not vectorized: no grouped stores in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:39:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:41:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:45:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:87:5: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:71:2: note: not vectorized: no grouped stores in basic block.
backend/checks.c:72:5: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:74:5: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:74:5: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:93:9: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:101:26: note: not vectorized: control flow in loop.
backend/checks.c:101:26: note: bad loop form.
backend/checks.c:101:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:103:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:103:6: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:101:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:101:2: note: not vectorized: not enough data-refs in basic block.
backend/checks.c:101:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:18:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:19:34: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:18:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:22:9: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:46:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:43:2: note: not vectorized: no vectype for stmt: _26 = *_25;
 scalar_type: complex double
backend/logmetrics.c:43:2: note: bad data references.
backend/logmetrics.c:30:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:31:17: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: _69 = *_64;
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4] = _69;
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: _80 = MEM[(complex double *)_64 + 16B];
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 16B] = _80;
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: _91 = MEM[(complex double *)_64 + 32B];
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 32B] = _91;
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: _102 = MEM[(complex double *)_64 + 48B];
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 48B] = _102;
 scalar_type: complex double
backend/logmetrics.c:30:2: note: not consecutive access *_3 = _4;
backend/logmetrics.c:30:2: note: not consecutive access _64 = *_63;
backend/logmetrics.c:30:2: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:40:29: note: not consecutive access REALPART_EXPR <*_12> = _14;
backend/logmetrics.c:40:29: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_12 + 48B]> = _17;
backend/logmetrics.c:40:29: note: not consecutive access REALPART_EXPR <*_18> = _20;
backend/logmetrics.c:40:29: note: not consecutive access REALPART_EXPR <MEM[(complex double *)_18 + 48B]> = _22;
backend/logmetrics.c:40:29: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:43:23: note: not vectorized: no vectype for stmt: _47 = *_48;
 scalar_type: complex double
backend/logmetrics.c:43:23: note: not vectorized: no vectype for stmt: _74 = *_75;
 scalar_type: complex double
backend/logmetrics.c:43:23: note: not vectorized: no vectype for stmt: _10 = *_9;
 scalar_type: complex double
backend/logmetrics.c:43:23: note: not vectorized: no vectype for stmt: _26 = *_25;
 scalar_type: complex double
backend/logmetrics.c:43:23: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:47:3: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:50:9: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:58:9: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:64:24: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:73:2: note: not vectorized: no vectype for stmt: _43 = *_39;
 scalar_type: complex double
backend/logmetrics.c:73:2: note: bad data references.
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _92 = *_93;
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _84 = MEM[(complex double *)_93 + 16B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _80 = MEM[(complex double *)_93 + 32B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _76 = MEM[(complex double *)_93 + 48B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _48 = *_49;
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _40 = MEM[(complex double *)_49 + 16B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _26 = MEM[(complex double *)_49 + 32B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _17 = MEM[(complex double *)_49 + 48B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _55 = *_61;
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _105 = MEM[(complex double *)_61 + 16B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _109 = MEM[(complex double *)_61 + 32B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _113 = MEM[(complex double *)_61 + 48B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _43 = *_39;
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _57 = MEM[(complex double *)_39 + 16B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _71 = MEM[(complex double *)_39 + 32B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not vectorized: no vectype for stmt: _85 = MEM[(complex double *)_39 + 48B];
 scalar_type: complex double
backend/logmetrics.c:77:15: note: not consecutive access _12 = *choi_28(D);
backend/logmetrics.c:77:15: note: not consecutive access _14 = MEM[(complex double * *)choi_28(D) + 24B];
backend/logmetrics.c:77:15: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:78:9: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:87:2: note: not vectorized: not suitable for gather load _14 = *_13;
backend/logmetrics.c:87:2: note: bad data references.
backend/logmetrics.c:88:3: note: not vectorized: not suitable for gather load _5 = *_4;
backend/logmetrics.c:88:3: note: bad data references.
backend/logmetrics.c:89:45: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:88:3: note: not consecutive access _5 = *_4;
backend/logmetrics.c:88:3: note: Build SLP failed: not grouped load _34 = REALPART_EXPR <_29>;
backend/logmetrics.c:88:3: note: Build SLP failed: not grouped load _33 = IMAGPART_EXPR <_29>;
backend/logmetrics.c:87:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:89:57: note: not consecutive access _14 = *_13;
backend/logmetrics.c:89:57: note: not consecutive access _24 = *_23;
backend/logmetrics.c:89:57: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:90:1: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:117:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:107:2: note: not vectorized: control flow in loop.
backend/logmetrics.c:107:2: note: bad loop form.
backend/logmetrics.c:100:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:101:12: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:100:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/logmetrics.c:100:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 16B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/logmetrics.c:100:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 32B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/logmetrics.c:100:2: note: not vectorized: no vectype for stmt: MEM[(complex double *)_4 + 48B] = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/logmetrics.c:100:2: note: not consecutive access *_3 = _4;
backend/logmetrics.c:100:2: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:105:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:109:7: note: not vectorized: no vectype for stmt: pretmp_17 = *_16;
 scalar_type: complex double
backend/logmetrics.c:109:7: note: not consecutive access pretmp_14 = *_13;
backend/logmetrics.c:109:7: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:110:8: note: not vectorized: no vectype for stmt: _78 = *pretmp_27;
 scalar_type: complex double
backend/logmetrics.c:110:8: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:111:15: note: not vectorized: no vectype for stmt: _82 = *pretmp_14;
 scalar_type: complex double
backend/logmetrics.c:111:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:109:7: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:110:8: note: not vectorized: no vectype for stmt: _105 = MEM[(complex double *)_102 + 16B];
 scalar_type: complex double
backend/logmetrics.c:110:8: note: not consecutive access _102 = MEM[(complex double * *)chi_49 + 8B];
backend/logmetrics.c:110:8: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:111:15: note: not vectorized: no vectype for stmt: _109 = MEM[(complex double *)pretmp_14 + 16B];
 scalar_type: complex double
backend/logmetrics.c:111:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:109:7: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:110:8: note: not vectorized: no vectype for stmt: _132 = MEM[(complex double *)_129 + 32B];
 scalar_type: complex double
backend/logmetrics.c:110:8: note: not consecutive access _129 = MEM[(complex double * *)chi_49 + 16B];
backend/logmetrics.c:110:8: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:111:15: note: not vectorized: no vectype for stmt: _136 = MEM[(complex double *)pretmp_14 + 32B];
 scalar_type: complex double
backend/logmetrics.c:111:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:109:7: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:110:8: note: not vectorized: no vectype for stmt: _159 = MEM[(complex double *)_156 + 48B];
 scalar_type: complex double
backend/logmetrics.c:110:8: note: not consecutive access _156 = MEM[(complex double * *)chi_49 + 24B];
backend/logmetrics.c:110:8: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:111:15: note: not vectorized: no vectype for stmt: _163 = MEM[(complex double *)pretmp_14 + 48B];
 scalar_type: complex double
backend/logmetrics.c:111:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:107:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:118:3: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:117:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:120:9: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:127:2: note: not vectorized: control flow in loop.
backend/logmetrics.c:127:2: note: bad loop form.
backend/logmetrics.c:18:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/logmetrics.c:127:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:152:1: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:128:7: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:128:6: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:129:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:131:11: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:132:15: note: not consecutive access *_98 = infidelity_55;
backend/logmetrics.c:132:15: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:134:11: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:135:15: note: not consecutive access *_98 = _67;
backend/logmetrics.c:135:15: note: not vectorized: no grouped stores in basic block.
backend/logmetrics.c:137:11: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:138:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:140:11: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:19:34: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:18:2: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:141:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:143:11: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:144:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:149:15: note: not vectorized: not enough data-refs in basic block.
backend/logmetrics.c:127:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:48:2: note: not vectorized: control flow in loop.
backend/memory.c:48:2: note: bad loop form.
backend/memory.c:51:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:35:2: note: not vectorized: multiple nested loops.
backend/memory.c:35:2: note: bad loop form.
backend/memory.c:37:3: note: not vectorized: control flow in loop.
backend/memory.c:37:3: note: bad loop form.
backend/memory.c:39:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:17:2: note: not vectorized: control flow in loop.
backend/memory.c:17:2: note: bad loop form.
backend/memory.c:19:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:14:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:14:76: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:16:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:17:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:24:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:25:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:27:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:18:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:19:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:17:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:20:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:19:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:35:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:28:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:29:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:44:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:46:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:47:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:48:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:36:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:36:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:38:29: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:39:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:37:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:40:33: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:39:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:35:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:57:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:52:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:49:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:50:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:51:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:48:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:52:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:53:32: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:51:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:68:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:304:2: note: versioning for alias required: can't determine dependence between *_40 and *_42
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: can't use a fully-masked loop because an access isn't contiguous.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:63:15: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__37.52_116 = MEM[(int *)vectp.50_114];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__41.56_124 = MEM[(int *)vectp.54_122];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.59_131] = vect__43.61_133;
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no grouped stores in basic block.
backend/memory.c:305:12: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not consecutive access _41 = *_40;
backend/memory.c:304:2: note: not consecutive access *_42 = _43;
backend/memory.c:304:2: note: not consecutive access _37 = *_36;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _145 = *_144;
backend/memory.c:304:2: note: not consecutive access *_146 = _147;
backend/memory.c:304:2: note: not consecutive access _141 = *_140;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:34: note: not consecutive access _99 = *_98;
backend/memory.c:304:34: note: not consecutive access *_100 = _101;
backend/memory.c:304:34: note: not consecutive access _86 = *_85;
backend/memory.c:304:34: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _50 = *_51;
backend/memory.c:304:2: note: not consecutive access *_49 = _48;
backend/memory.c:304:2: note: not consecutive access _60 = *_61;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:65:19: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:66:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:68:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:69:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:68:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:71:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:76:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:76:2: note: bad loop form.
backend/memory.c:76:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:77:3: note: not consecutive access _5 = *_4;
backend/memory.c:77:3: note: not consecutive access _1 = simul_12(D)->decbins;
backend/memory.c:77:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:76:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:78:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:79:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:80:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:170:2: note: not vectorized: control flow in loop.
backend/memory.c:170:2: note: bad loop form.
backend/memory.c:172:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:161:2: note: not vectorized: control flow in loop.
backend/memory.c:161:2: note: bad loop form.
backend/memory.c:163:3: note: Unknown misalignment, naturally aligned
backend/memory.c:163:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/memory.c:146:2: note: not vectorized: control flow in loop.
backend/memory.c:146:2: note: bad loop form.
backend/memory.c:149:3: note: Unknown misalignment, naturally aligned
backend/memory.c:149:3: note: Unknown misalignment, naturally aligned
backend/memory.c:149:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/memory.c:131:2: note: not vectorized: multiple nested loops.
backend/memory.c:131:2: note: bad loop form.
backend/memory.c:133:3: note: not vectorized: multiple nested loops.
backend/memory.c:133:3: note: bad loop form.
backend/memory.c:135:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:137:5: note: Unknown misalignment, naturally aligned
backend/memory.c:137:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/memory.c:107:2: note: not vectorized: multiple nested loops.
backend/memory.c:107:2: note: bad loop form.
backend/memory.c:109:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:111:4: note: Unknown misalignment, naturally aligned
backend/memory.c:111:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/memory.c:98:2: note: not vectorized: control flow in loop.
backend/memory.c:98:2: note: bad loop form.
backend/memory.c:100:3: note: Unknown misalignment, naturally aligned
backend/memory.c:100:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/memory.c:95:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:89:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:85:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:85:73: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:87:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:88:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:89:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:94:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:95:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:90:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:89:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:97:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:98:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:96:34: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:95:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:99:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:100:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:98:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:98:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:98:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:101:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.124_352] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/memory.c:101:32: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:101:32: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:100:38: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:108:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:109:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:107:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:110:29: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:110:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:110:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:112:31: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.118_380] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/memory.c:112:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:112:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:111:29: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:109:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:132:22: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:133:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:131:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:131:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:134:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:135:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:133:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:136:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:136:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:136:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:136:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:138:32: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.112_404] = { 0, 0, 0, 0 };
 scalar_type: vector(4) int
backend/memory.c:138:32: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:138:32: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:137:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:137:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:137:37: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:135:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:147:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:148:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:149:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:146:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:146:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:146:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:151:28: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.104_213] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/memory.c:151:28: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.106_209] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/memory.c:151:28: note: not vectorized: no grouped stores in basic block.
backend/memory.c:151:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:149:54: note: not consecutive access *_239 = 0.0;
backend/memory.c:149:54: note: not consecutive access *_237 = 0.0;
backend/memory.c:149:54: note: not vectorized: no grouped stores in basic block.
backend/memory.c:159:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:160:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:161:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:170:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:162:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:162:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:163:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:161:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:161:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:161:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:164:26: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.98_363] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/memory.c:164:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:164:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:163:41: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:175:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:177:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:171:34: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:172:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:170:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:173:38: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:172:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:145:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:147:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:118:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:119:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:120:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:121:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:123:29: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:130:14: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:117:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:118:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:119:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:120:28: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:121:25: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:130:16: note: not consecutive access simul_180(D)->statsperlevel = _155;
backend/memory.c:144:17: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:145:20: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:145:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:105:17: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:206:2: note: not vectorized: control flow in loop.
backend/memory.c:206:2: note: bad loop form.
backend/memory.c:207:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:195:2: note: not vectorized: multiple nested loops.
backend/memory.c:195:2: note: bad loop form.
backend/memory.c:196:3: note: not vectorized: control flow in loop.
backend/memory.c:196:3: note: bad loop form.
backend/memory.c:197:4: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:186:2: note: not vectorized: control flow in loop.
backend/memory.c:186:2: note: bad loop form.
backend/memory.c:187:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:185:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:185:76: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:186:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:188:4: note: not consecutive access _10 = *_9;
backend/memory.c:188:4: note: not consecutive access _14 = *_13;
backend/memory.c:188:4: note: not consecutive access _6 = simul_97(D)->virtchan;
backend/memory.c:188:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:187:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:189:3: note: not consecutive access _19 = *_18;
backend/memory.c:189:3: note: not consecutive access _15 = simul_97(D)->virtchan;
backend/memory.c:189:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:186:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:187:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:191:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:195:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:198:5: note: not consecutive access _25 = *_24;
backend/memory.c:198:5: note: not consecutive access _29 = *_28;
backend/memory.c:198:5: note: not consecutive access _33 = *_32;
backend/memory.c:198:5: note: not consecutive access _21 = simul_97(D)->process;
backend/memory.c:198:5: note: not vectorized: no grouped stores in basic block.
backend/memory.c:197:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:199:4: note: not consecutive access _38 = *_37;
backend/memory.c:199:4: note: not consecutive access _42 = *_41;
backend/memory.c:199:4: note: not consecutive access _34 = simul_97(D)->process;
backend/memory.c:199:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:196:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:197:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:201:3: note: not consecutive access _47 = *_46;
backend/memory.c:201:3: note: not consecutive access _43 = simul_97(D)->process;
backend/memory.c:201:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:195:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:198:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:203:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:204:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:206:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:208:4: note: not consecutive access _58 = *_57;
backend/memory.c:208:4: note: not consecutive access _54 = *_53;
backend/memory.c:208:4: note: not consecutive access _50 = simul_97(D)->effective;
backend/memory.c:208:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:209:4: note: not consecutive access _63 = *_62;
backend/memory.c:209:4: note: not consecutive access _61 = *_60;
backend/memory.c:209:4: note: not consecutive access _59 = simul_97(D)->effprocess;
backend/memory.c:209:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:207:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:211:3: note: not consecutive access _68 = *_67;
backend/memory.c:211:3: note: not consecutive access _64 = simul_97(D)->effective;
backend/memory.c:211:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:212:3: note: not consecutive access _71 = *_70;
backend/memory.c:212:3: note: not consecutive access _69 = simul_97(D)->effprocess;
backend/memory.c:212:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:206:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:207:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:214:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:215:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:218:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:219:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:222:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:286:2: note: not vectorized: control flow in loop.
backend/memory.c:286:2: note: bad loop form.
backend/memory.c:289:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:274:2: note: not vectorized: multiple nested loops.
backend/memory.c:274:2: note: bad loop form.
backend/memory.c:275:3: note: not vectorized: control flow in loop.
backend/memory.c:275:3: note: bad loop form.
backend/memory.c:276:4: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:276:4: note: bad loop form.
backend/memory.c:269:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:269:2: note: bad loop form.
backend/memory.c:263:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:263:2: note: bad loop form.
backend/memory.c:260:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:260:2: note: bad loop form.
backend/memory.c:245:2: note: not vectorized: control flow in loop.
backend/memory.c:245:2: note: bad loop form.
backend/memory.c:246:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:240:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:240:2: note: bad loop form.
backend/memory.c:236:2: note: not vectorized: number of iterations cannot be computed.
backend/memory.c:236:2: note: bad loop form.
backend/memory.c:229:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:227:24: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:227:73: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:229:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:231:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:232:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:236:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:230:3: note: not consecutive access _10 = *_9;
backend/memory.c:230:3: note: not consecutive access _6 = simul_150(D)->physical;
backend/memory.c:230:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:229:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:238:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:240:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:237:3: note: not consecutive access _17 = *_16;
backend/memory.c:237:3: note: not consecutive access _13 = simul_150(D)->metricsToCompute;
backend/memory.c:237:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:236:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:242:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:245:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:241:3: note: not consecutive access _24 = *_23;
backend/memory.c:241:3: note: not consecutive access _20 = simul_150(D)->metricValues;
backend/memory.c:241:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:240:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:247:4: note: not consecutive access _35 = *_34;
backend/memory.c:247:4: note: not consecutive access _31 = *_30;
backend/memory.c:247:4: note: not consecutive access _27 = simul_150(D)->logical;
backend/memory.c:247:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:246:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:248:3: note: not consecutive access _40 = *_39;
backend/memory.c:248:3: note: not consecutive access _36 = simul_150(D)->logical;
backend/memory.c:248:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:245:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:246:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:250:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:253:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:254:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:255:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:256:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:257:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:260:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:262:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:263:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:261:3: note: not consecutive access _52 = *_51;
backend/memory.c:261:3: note: not consecutive access _48 = simul_150(D)->sumsq;
backend/memory.c:261:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:260:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:265:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:268:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:269:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:264:3: note: not consecutive access _59 = *_58;
backend/memory.c:264:3: note: not consecutive access _55 = simul_150(D)->variance;
backend/memory.c:264:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:263:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:271:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:274:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:270:3: note: not consecutive access _67 = *_66;
backend/memory.c:270:3: note: not consecutive access _63 = simul_150(D)->runavg;
backend/memory.c:270:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:269:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:277:5: note: not consecutive access _82 = *_81;
backend/memory.c:277:5: note: not consecutive access _78 = *_77;
backend/memory.c:277:5: note: not consecutive access _74 = *_73;
backend/memory.c:277:5: note: not consecutive access _70 = simul_150(D)->bins;
backend/memory.c:277:5: note: not vectorized: no grouped stores in basic block.
backend/memory.c:276:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:278:4: note: not consecutive access _92 = *_91;
backend/memory.c:278:4: note: not consecutive access _88 = *_87;
backend/memory.c:278:4: note: not consecutive access _84 = simul_150(D)->bins;
backend/memory.c:278:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:275:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:276:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:280:3: note: not consecutive access _98 = *_97;
backend/memory.c:280:3: note: not consecutive access _94 = simul_150(D)->bins;
backend/memory.c:280:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:274:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:275:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:282:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:286:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:290:4: note: not consecutive access _109 = *_108;
backend/memory.c:290:4: note: not consecutive access _105 = *_104;
backend/memory.c:290:4: note: not consecutive access _101 = simul_150(D)->levelOneChannels;
backend/memory.c:290:4: note: not vectorized: no grouped stores in basic block.
backend/memory.c:289:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:291:3: note: not consecutive access _114 = *_113;
backend/memory.c:291:3: note: not consecutive access _110 = simul_150(D)->levelOneChannels;
backend/memory.c:291:3: note: not vectorized: no grouped stores in basic block.
backend/memory.c:286:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:289:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:293:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:295:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:297:1: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: versioning for alias required: can't determine dependence between *_6 and *_12
backend/memory.c:304:2: note: versioning for alias required: can't determine dependence between *_10 and *_12
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: can't use a fully-masked loop because an access isn't contiguous.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__7.310_112 = MEM[(int *)vectp.308_110];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__11.314_120 = MEM[(int *)vectp.312_118];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.317_127] = vect__13.319_129;
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no grouped stores in basic block.
backend/memory.c:305:12: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not consecutive access _11 = *_10;
backend/memory.c:304:2: note: not consecutive access *_12 = _13;
backend/memory.c:304:2: note: not consecutive access _7 = *_6;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _141 = *_140;
backend/memory.c:304:2: note: not consecutive access *_142 = _143;
backend/memory.c:304:2: note: not consecutive access _137 = *_136;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:34: note: not consecutive access _95 = *_94;
backend/memory.c:304:34: note: not consecutive access *_96 = _97;
backend/memory.c:304:34: note: not consecutive access _91 = *_90;
backend/memory.c:304:34: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _79 = *_78;
backend/memory.c:304:2: note: not consecutive access *_80 = _81;
backend/memory.c:304:2: note: not consecutive access _75 = *_74;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:306:14: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:318:3: note: not vectorized: multiple nested loops.
backend/memory.c:318:3: note: bad loop form.
backend/memory.c:321:4: note: not vectorized: multiple nested loops.
backend/memory.c:321:4: note: bad loop form.
backend/memory.c:323:5: note: not vectorized: control flow in loop.
backend/memory.c:323:5: note: bad loop form.
backend/memory.c:325:6: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:334:3: note: not vectorized: multiple nested loops.
backend/memory.c:334:3: note: bad loop form.
backend/memory.c:336:4: note: not vectorized: multiple nested loops.
backend/memory.c:336:4: note: bad loop form.
backend/memory.c:337:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:338:6: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:304:2: note: versioning for alias required: can't determine dependence between *_150 and *_152
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: Unknown misalignment, naturally aligned
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: can't use a fully-masked loop because an access isn't contiguous.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:304:2: note: not ssa-name.
backend/memory.c:304:2: note: use not simple.
backend/memory.c:313:15: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:316:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:316:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:316:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__147.348_83 = MEM[(int *)vectp.346_85];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: vect__151.352_261 = MEM[(int *)vectp.350_60];
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.355_248] = vect__153.357_250;
 scalar_type: vector(4) int
backend/memory.c:305:12: note: not vectorized: no grouped stores in basic block.
backend/memory.c:305:12: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:304:2: note: not consecutive access _151 = *_150;
backend/memory.c:304:2: note: not consecutive access *_152 = _153;
backend/memory.c:304:2: note: not consecutive access _147 = *_146;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _233 = *_232;
backend/memory.c:304:2: note: not consecutive access *_228 = _220;
backend/memory.c:304:2: note: not consecutive access _239 = *_238;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:34: note: not consecutive access _167 = *_169;
backend/memory.c:304:34: note: not consecutive access *_165 = _163;
backend/memory.c:304:34: note: not consecutive access _172 = *_174;
backend/memory.c:304:34: note: not vectorized: no grouped stores in basic block.
backend/memory.c:304:2: note: not consecutive access _198 = *_199;
backend/memory.c:304:2: note: not consecutive access *_197 = _196;
backend/memory.c:304:2: note: not consecutive access _202 = *_203;
backend/memory.c:304:2: note: not vectorized: no grouped stores in basic block.
backend/memory.c:334:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:348:9: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:318:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:318:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:319:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:320:18: note: not consecutive access _14 = *_13;
backend/memory.c:320:18: note: not consecutive access *_11 = _12;
backend/memory.c:320:18: note: not vectorized: no grouped stores in basic block.
backend/memory.c:321:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:318:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:326:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:322:22: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:323:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:324:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:325:6: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:327:33: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:323:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:326:30: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:325:6: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:321:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:321:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:335:18: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:336:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:339:26: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:339:7: note: not consecutive access _51 = *_50;
backend/memory.c:339:7: note: not consecutive access _47 = *_252;
backend/memory.c:339:7: note: not consecutive access _59 = *_58;
backend/memory.c:339:7: note: not consecutive access _55 = *_54;
backend/memory.c:339:7: note: not vectorized: no grouped stores in basic block.
backend/memory.c:338:6: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:340:6: note: not consecutive access _66 = *_65;
backend/memory.c:340:6: note: not consecutive access _62 = *_252;
backend/memory.c:340:6: note: not consecutive access _70 = *_69;
backend/memory.c:340:6: note: not vectorized: no grouped stores in basic block.
backend/memory.c:337:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:342:5: note: not consecutive access _77 = *_76;
backend/memory.c:342:5: note: not consecutive access _73 = *_252;
backend/memory.c:342:5: note: not vectorized: no grouped stores in basic block.
backend/memory.c:336:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:337:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:344:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:334:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:357:3: note: not vectorized: multiple nested loops.
backend/memory.c:357:3: note: bad loop form.
backend/memory.c:359:4: note: not vectorized: control flow in loop.
backend/memory.c:359:4: note: bad loop form.
backend/memory.c:361:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:369:3: note: not vectorized: multiple nested loops.
backend/memory.c:369:3: note: bad loop form.
backend/memory.c:370:4: note: not vectorized: control flow in loop.
backend/memory.c:370:4: note: bad loop form.
backend/memory.c:371:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/memory.c:355:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:369:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:369:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:357:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:362:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:358:23: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:359:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:360:27: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:361:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:363:34: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:359:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:362:31: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:361:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:357:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:372:6: note: not consecutive access _33 = *_32;
backend/memory.c:372:6: note: not consecutive access _25 = *_24;
backend/memory.c:372:6: note: not consecutive access _29 = *_28;
backend/memory.c:372:6: note: not vectorized: no grouped stores in basic block.
backend/memory.c:371:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:373:5: note: not consecutive access _37 = *_24;
backend/memory.c:373:5: note: not consecutive access _41 = *_40;
backend/memory.c:373:5: note: not vectorized: no grouped stores in basic block.
backend/memory.c:370:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:371:5: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:375:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:369:3: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:370:4: note: not vectorized: not enough data-refs in basic block.
backend/memory.c:379:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:32:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/qecc.c:25:2: note: not vectorized: control flow in loop.
backend/qecc.c:25:2: note: bad loop form.
backend/qecc.c:27:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/qecc.c:20:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/qecc.c:13:22: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:14:23: note: not consecutive access qecc_49(D)->nlogs = _4;
backend/qecc.c:14:23: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:19:20: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:24:17: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:25:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:21:24: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:21:24: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:26:23: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:27:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:25:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:25:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:28:27: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:27:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:33:23: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:32:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:36:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:33:23: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:31:15: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:53:2: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:53:2: note: bad loop form.
backend/qecc.c:46:2: note: not vectorized: control flow in loop.
backend/qecc.c:46:2: note: bad loop form.
backend/qecc.c:47:3: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:47:3: note: bad loop form.
backend/qecc.c:41:2: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:41:2: note: bad loop form.
backend/qecc.c:41:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:43:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:42:3: note: not consecutive access _5 = *_4;
backend/qecc.c:42:3: note: not consecutive access _1 = qecc_41(D)->projector;
backend/qecc.c:42:3: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:41:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:48:4: note: not consecutive access _16 = *_15;
backend/qecc.c:48:4: note: not consecutive access _12 = *_11;
backend/qecc.c:48:4: note: not consecutive access _8 = qecc_41(D)->action;
backend/qecc.c:48:4: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:47:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:49:3: note: not consecutive access _22 = *_21;
backend/qecc.c:49:3: note: not consecutive access _18 = qecc_41(D)->action;
backend/qecc.c:49:3: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:47:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:51:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:53:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:55:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:56:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:54:3: note: not consecutive access _29 = *_28;
backend/qecc.c:54:3: note: not consecutive access _25 = qecc_41(D)->phases;
backend/qecc.c:54:3: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:53:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:63:2: note: not vectorized: multiple nested loops.
backend/qecc.c:63:2: note: bad loop form.
backend/qecc.c:64:3: note: not vectorized: multiple nested loops.
backend/qecc.c:64:3: note: bad loop form.
backend/qecc.c:69:5: note: not vectorized: multiple nested loops.
backend/qecc.c:69:5: note: bad loop form.
backend/qecc.c:69:5: note: not vectorized: not suitable for gather load _113 = REALPART_EXPR <*_45>;
backend/qecc.c:69:5: note: bad data references.
backend/qecc.c:67:5: note: not vectorized: not suitable for gather load _17 = *_16;
backend/qecc.c:67:5: note: bad data references.
backend/qecc.c:68:19: note: not consecutive access _17 = *_16;
backend/qecc.c:68:19: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:69:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:69:5: note: not consecutive access _341 = *_342;
backend/qecc.c:69:5: note: not consecutive access _332 = *_333;
backend/qecc.c:69:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:69:5: note: not consecutive access _265 = *_266;
backend/qecc.c:69:5: note: not consecutive access _310 = *_311;
backend/qecc.c:69:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:69:30: note: not consecutive access _56 = *_55;
backend/qecc.c:69:30: note: not consecutive access _42 = *_41;
backend/qecc.c:69:30: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:67:5: note: not consecutive access _32 = *_31;
backend/qecc.c:67:5: note: not consecutive access _4 = *_3;
backend/qecc.c:67:5: note: not consecutive access _237 = *_238;
backend/qecc.c:67:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:67:5: note: not consecutive access _209 = *_210;
backend/qecc.c:67:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:67:5: note: not consecutive access _181 = *_182;
backend/qecc.c:67:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:68:54: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:63:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:68:75: note: not consecutive access _27 = *_26;
backend/qecc.c:68:75: note: not consecutive access pretmp_282 = *_281;
backend/qecc.c:68:75: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:75:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:64:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:84:3: note: not vectorized: multiple nested loops.
backend/qecc.c:84:3: note: bad loop form.
backend/qecc.c:85:4: note: not vectorized: multiple nested loops.
backend/qecc.c:85:4: note: bad loop form.
backend/qecc.c:86:5: note: not vectorized: multiple nested loops.
backend/qecc.c:86:5: note: bad loop form.
backend/qecc.c:87:6: note: not vectorized: control flow in loop.
backend/qecc.c:87:6: note: bad loop form.
backend/qecc.c:89:7: note: not vectorized: not suitable for gather load _21 = *_20;
backend/qecc.c:89:7: note: bad data references.
backend/qecc.c:99:3: note: not vectorized: multiple nested loops.
backend/qecc.c:99:3: note: bad loop form.
backend/qecc.c:100:4: note: not vectorized: control flow in loop.
backend/qecc.c:100:4: note: bad loop form.
backend/qecc.c:102:5: note: not vectorized: not suitable for gather load _89 = *_88;
backend/qecc.c:102:5: note: bad data references.
backend/qecc.c:83:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:99:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:100:24: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:86:25: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:90:85: note: not consecutive access _10 = *_9;
backend/qecc.c:90:85: note: not consecutive access _25 = *_24;
backend/qecc.c:90:85: note: not consecutive access _29 = *_28;
backend/qecc.c:90:85: note: not consecutive access _14 = *_13;
backend/qecc.c:90:85: note: not consecutive access _6 = qecc_137(D)->action;
backend/qecc.c:90:85: note: not consecutive access _1 = sim_138(D)->virtchan;
backend/qecc.c:90:85: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:89:7: note: not consecutive access _17 = *_16;
backend/qecc.c:89:7: note: not consecutive access _31 = *_30;
backend/qecc.c:89:7: note: not consecutive access _21 = *_20;
backend/qecc.c:89:7: note: not consecutive access _35 = *_34;
backend/qecc.c:89:7: note: not consecutive access _5 = *_4;
backend/qecc.c:89:7: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:87:6: note: not consecutive access *_65 = _66;
backend/qecc.c:87:6: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:89:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:86:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:91:59: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:85:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:90:82: note: not consecutive access pretmp_382 = *_381;
backend/qecc.c:90:82: note: not consecutive access pretmp_389 = *_388;
backend/qecc.c:90:82: note: not consecutive access pretmp_386 = *_385;
backend/qecc.c:90:82: note: not consecutive access pretmp_392 = *_391;
backend/qecc.c:90:82: note: not consecutive access _130 = qecc_137(D)->N;
backend/qecc.c:90:82: note: not consecutive access pretmp_268 = qecc_137(D)->phases;
backend/qecc.c:90:82: note: not consecutive access pretmp_270 = sim_138(D)->process;
backend/qecc.c:90:82: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:90:57: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:103:58: note: not consecutive access _78 = *_77;
backend/qecc.c:103:58: note: not consecutive access _82 = *_81;
backend/qecc.c:103:58: note: not consecutive access _74 = qecc_137(D)->action;
backend/qecc.c:103:58: note: not consecutive access _69 = sim_138(D)->virtchan;
backend/qecc.c:103:58: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:102:5: note: not consecutive access _85 = *_84;
backend/qecc.c:102:5: note: not consecutive access _89 = *_88;
backend/qecc.c:102:5: note: not consecutive access _91 = *_90;
backend/qecc.c:102:5: note: not consecutive access _73 = *_72;
backend/qecc.c:102:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:100:4: note: not consecutive access *_114 = _115;
backend/qecc.c:100:4: note: not consecutive access _113 = *_112;
backend/qecc.c:100:4: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:102:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:99:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:103:55: note: not consecutive access pretmp_338 = *_337;
backend/qecc.c:103:55: note: not consecutive access pretmp_346 = *_345;
backend/qecc.c:103:55: note: not consecutive access pretmp_349 = *_348;
backend/qecc.c:103:55: note: not consecutive access _155 = qecc_137(D)->N;
backend/qecc.c:103:55: note: not consecutive access pretmp_335 = qecc_137(D)->phases;
backend/qecc.c:103:55: note: not consecutive access pretmp_343 = sim_138(D)->process;
backend/qecc.c:103:55: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:110:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:118:2: note: not vectorized: multiple nested loops.
backend/qecc.c:118:2: note: bad loop form.
backend/qecc.c:121:4: note: bad data references.
backend/qecc.c:122:5: note: step unknown.
backend/qecc.c:122:5: note: reduction used in loop.
backend/qecc.c:122:5: note: Unknown def-use cycle pattern.
backend/qecc.c:122:5: note: not vectorized: complicated access pattern.
backend/qecc.c:122:5: note: bad data access.
backend/qecc.c:125:4: note: not vectorized: not suitable for gather load _35 = *_34;
backend/qecc.c:125:4: note: bad data references.
backend/qecc.c:118:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:136:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:119:7: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:120:6: note: not consecutive access *_4 = 0.0;
backend/qecc.c:120:6: note: not consecutive access pretmp_159 = *_158;
backend/qecc.c:120:6: note: not consecutive access pretmp_157 = qecc_73(D)->projector;
backend/qecc.c:120:6: note: not consecutive access pretmp_154 = sim_74(D)->process;
backend/qecc.c:120:6: note: not consecutive access pretmp_155 = *pretmp_154;
backend/qecc.c:120:6: note: not consecutive access pretmp_156 = *pretmp_155;
backend/qecc.c:120:6: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:122:5: note: not consecutive access _22 = *_21;
backend/qecc.c:122:5: note: not consecutive access *_4 = _25;
backend/qecc.c:122:5: note: not consecutive access _16 = *_15;
backend/qecc.c:122:5: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:121:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:127:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:123:49: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:123:49: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:125:4: note: not consecutive access _41 = *_40;
backend/qecc.c:125:4: note: not consecutive access *_4 = _44;
backend/qecc.c:125:4: note: not consecutive access _35 = *_34;
backend/qecc.c:125:4: note: not consecutive access _33 = *_32;
backend/qecc.c:125:4: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:128:24: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:130:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:131:25: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:133:25: note: not consecutive access _57 = *_56;
backend/qecc.c:133:25: note: not consecutive access *_191 = _59;
backend/qecc.c:133:25: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:118:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:149:2: note: not vectorized: multiple nested loops.
backend/qecc.c:149:2: note: bad loop form.
backend/qecc.c:153:4: note: not vectorized: multiple nested loops.
backend/qecc.c:153:4: note: bad loop form.
backend/qecc.c:156:6: note: not vectorized: multiple nested loops.
backend/qecc.c:156:6: note: bad loop form.
backend/qecc.c:158:7: note: bad data references.
backend/qecc.c:159:8: note: step unknown.
backend/qecc.c:159:8: note: Unknown misalignment, naturally aligned
backend/qecc.c:159:8: note: Unknown misalignment, naturally aligned
backend/qecc.c:159:8: note: not ssa-name.
backend/qecc.c:159:8: note: use not simple.
backend/qecc.c:159:8: note: not ssa-name.
backend/qecc.c:159:8: note: use not simple.
backend/qecc.c:159:8: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/qecc.c:159:8: note: not ssa-name.
backend/qecc.c:159:8: note: use not simple.
backend/qecc.c:159:8: note: not ssa-name.
backend/qecc.c:159:8: note: use not simple.
backend/qecc.c:159:8: note: reduc op not supported by target.
backend/qecc.c:159:8: note: multiple types in double reduction or condition reduction.
backend/qecc.c:159:8: note: not vectorized: relevant stmt not supported: contrib_122 = _43 + contrib_149;
backend/qecc.c:159:8: note: bad operation or unsupported loop bound.
backend/qecc.c:165:6: note: not vectorized: control flow in loop.
backend/qecc.c:165:6: note: bad loop form.
backend/qecc.c:167:7: note: not vectorized: not suitable for gather load _72 = *_71;
backend/qecc.c:167:7: note: bad data references.
backend/qecc.c:149:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:180:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:150:11: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:150:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:153:4: note: not consecutive access *_9 = 0;
backend/qecc.c:153:4: note: not consecutive access _6 = sim_117(D)->corrections;
backend/qecc.c:153:4: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:153:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:155:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:165:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:169:41: note: not consecutive access pretmp_263 = *_262;
backend/qecc.c:169:41: note: not consecutive access _145 = qecc_116(D)->nstabs;
backend/qecc.c:169:41: note: not consecutive access pretmp_258 = consts_121(D)->algebra;
backend/qecc.c:169:41: note: not consecutive access pretmp_260 = MEM[(int * * *)pretmp_258 + 8B];
backend/qecc.c:169:41: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:156:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:160:58: note: not consecutive access pretmp_218 = *_217;
backend/qecc.c:160:58: note: not consecutive access _139 = qecc_116(D)->nstabs;
backend/qecc.c:160:58: note: not consecutive access pretmp_213 = consts_121(D)->algebra;
backend/qecc.c:160:58: note: not consecutive access pretmp_215 = MEM[(int * * *)pretmp_213 + 8B];
backend/qecc.c:160:58: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:160:91: note: not consecutive access _23 = *_22;
backend/qecc.c:160:91: note: not consecutive access _27 = *_26;
backend/qecc.c:160:91: note: not consecutive access _14 = *_13;
backend/qecc.c:160:91: note: not consecutive access _20 = *_19;
backend/qecc.c:160:91: note: not consecutive access _38 = *_37;
backend/qecc.c:160:91: note: not consecutive access _36 = qecc_116(D)->projector;
backend/qecc.c:160:91: note: not consecutive access _10 = sim_117(D)->process;
backend/qecc.c:160:91: note: not consecutive access _16 = *pretmp_213;
backend/qecc.c:160:91: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:160:65: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:159:8: note: not consecutive access _41 = *_40;
backend/qecc.c:159:8: note: not consecutive access _35 = *_34;
backend/qecc.c:159:8: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:158:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:156:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:158:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:168:74: note: not consecutive access _62 = *_61;
backend/qecc.c:168:74: note: not consecutive access _66 = *_65;
backend/qecc.c:168:74: note: not consecutive access _75 = *_74;
backend/qecc.c:168:74: note: not consecutive access _73 = qecc_116(D)->projector;
backend/qecc.c:168:74: note: not consecutive access _58 = sim_117(D)->process;
backend/qecc.c:168:74: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:167:7: note: not consecutive access _78 = *_77;
backend/qecc.c:167:7: note: not consecutive access _70 = *_69;
backend/qecc.c:167:7: note: not consecutive access _72 = *_71;
backend/qecc.c:167:7: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:165:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:167:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:172:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:173:26: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:153:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:153:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:149:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:191:2: note: not vectorized: multiple nested loops.
backend/qecc.c:191:2: note: bad loop form.
backend/qecc.c:215:4: note: bad data references.


backend/qecc.c:216:5: note: versioning for alias required: can't determine dependence between *_223 and REALPART_EXPR <*_220>
backend/qecc.c:216:5: note: versioning for alias required: can't determine dependence between *_223 and IMAGPART_EXPR <*_220>
backend/qecc.c:216:5: note: Build SLP failed: not grouped load _224 = *_223;
backend/qecc.c:216:5: note: vector alignment may not be reachable
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:216:5: note: no array mode for V2DF[2]
backend/qecc.c:199:5: note: not vectorized: multiple nested loops.
backend/qecc.c:199:5: note: bad loop form.
backend/qecc.c:200:6: note: not vectorized: multiple nested loops.
backend/qecc.c:200:6: note: bad loop form.
backend/qecc.c:201:7: note: not vectorized: multiple nested loops.
backend/qecc.c:201:7: note: bad loop form.
backend/qecc.c:202:8: note: not vectorized: multiple nested loops.
backend/qecc.c:202:8: note: bad loop form.
backend/qecc.c:203:9: note: not vectorized: control flow in loop.
backend/qecc.c:203:9: note: bad loop form.
backend/qecc.c:204:10: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:204:10: note: bad loop form.
backend/qecc.c:207:5: note: not vectorized: multiple nested loops.
backend/qecc.c:207:5: note: bad loop form.
backend/qecc.c:208:6: note: not vectorized: multiple nested loops.
backend/qecc.c:208:6: note: bad loop form.
backend/qecc.c:209:7: note: not vectorized: multiple nested loops.
backend/qecc.c:209:7: note: bad loop form.
backend/qecc.c:210:8: note: not vectorized: control flow in loop.
backend/qecc.c:210:8: note: bad loop form.
backend/qecc.c:212:10: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:212:10: note: bad loop form.
backend/qecc.c:193:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/qecc.c:191:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:191:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:195:21: note: not consecutive access _5 = *_4;
backend/qecc.c:195:21: note: not consecutive access _1 = sim_273(D)->effective;
backend/qecc.c:195:21: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:195:31: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:193:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:197:6: note: not consecutive access _18 = *_17;
backend/qecc.c:197:6: note: not consecutive access _14 = sim_273(D)->syndprobs;
backend/qecc.c:197:6: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:198:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:207:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:211:57: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:199:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:106: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:181: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:204:10: note: not consecutive access _25 = *_24;
backend/qecc.c:204:10: note: not consecutive access _33 = *_32;
backend/qecc.c:204:10: note: not consecutive access _45 = *_44;
backend/qecc.c:204:10: note: not consecutive access _64 = *_63;
backend/qecc.c:204:10: note: not consecutive access _29 = *_28;
backend/qecc.c:204:10: note: not consecutive access _43 = *_42;
backend/qecc.c:204:10: note: not consecutive access _49 = *_48;
backend/qecc.c:204:10: note: not consecutive access _74 = *_73;
backend/qecc.c:204:10: note: not consecutive access _90 = *_89;
backend/qecc.c:204:10: note: not consecutive access _102 = *_101;
backend/qecc.c:204:10: note: not consecutive access _61 = *_60;
backend/qecc.c:204:10: note: not consecutive access _98 = *_97;
backend/qecc.c:204:10: note: not consecutive access _69 = *_68;
backend/qecc.c:204:10: note: not consecutive access _40 = *_39;
backend/qecc.c:204:10: note: not consecutive access _85 = *_84;
backend/qecc.c:204:10: note: not consecutive access _53 = *_52;
backend/qecc.c:204:10: note: not consecutive access _57 = *_56;
backend/qecc.c:204:10: note: not consecutive access _108 = qecc_272(D)->nstabs;
backend/qecc.c:204:10: note: not consecutive access _59 = qecc_272(D)->projector;
backend/qecc.c:204:10: note: Build SLP failed: not grouped load _308 = REALPART_EXPR <_281>;
backend/qecc.c:204:10: note: Build SLP failed: not grouped load _321 = IMAGPART_EXPR <_281>;
backend/qecc.c:203:9: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:204:10: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:204:10: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:202:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:203:9: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:130: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:201:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:202:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:231: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:200:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:201:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:37: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:199:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:200:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:205:30: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:213:186: note: not consecutive access pretmp_682 = *_681;
backend/qecc.c:213:186: note: not consecutive access pretmp_679 = sim_273(D)->corrections;
backend/qecc.c:213:186: note: not consecutive access pretmp_677 = consts_279(D)->algebra;
backend/qecc.c:213:186: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:211:12: note: not consecutive access _128 = *_127;
backend/qecc.c:211:12: note: not consecutive access _124 = *_123;
backend/qecc.c:211:12: note: not consecutive access _115 = *prephitmp_678;
backend/qecc.c:211:12: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:212:10: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:213:130: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:212:10: note: not consecutive access _134 = *_133;
backend/qecc.c:212:10: note: not consecutive access _140 = *_139;
backend/qecc.c:212:10: note: not consecutive access _162 = *_161;
backend/qecc.c:212:10: note: not consecutive access _138 = *_137;
backend/qecc.c:212:10: note: not consecutive access _172 = *_171;
backend/qecc.c:212:10: note: not consecutive access _188 = *_187;
backend/qecc.c:212:10: note: not consecutive access _200 = *_199;
backend/qecc.c:212:10: note: not consecutive access _159 = *_158;
backend/qecc.c:212:10: note: not consecutive access _196 = *_195;
backend/qecc.c:212:10: note: not consecutive access _167 = *_166;
backend/qecc.c:212:10: note: not consecutive access _147 = *_146;
backend/qecc.c:212:10: note: not consecutive access _149 = *_148;
backend/qecc.c:212:10: note: not consecutive access _183 = *_182;
backend/qecc.c:212:10: note: not consecutive access _153 = *_152;
backend/qecc.c:212:10: note: not consecutive access _155 = *_154;
backend/qecc.c:212:10: note: not consecutive access _131 = MEM[(int * * *)_130 + 8B];
backend/qecc.c:212:10: note: not consecutive access _206 = qecc_272(D)->nstabs;
backend/qecc.c:212:10: note: not consecutive access _157 = qecc_272(D)->projector;
backend/qecc.c:212:10: note: Build SLP failed: not grouped load _306 = REALPART_EXPR <_291>;
backend/qecc.c:212:10: note: Build SLP failed: not grouped load _330 = IMAGPART_EXPR <_291>;
backend/qecc.c:212:10: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:210:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:209:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:210:8: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:208:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:209:7: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:213:37: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:207:5: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:208:6: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:213:30: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:215:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:217:40: note: not consecutive access _213 = *_212;
backend/qecc.c:217:40: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:217:25: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:217:25: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:217:32: note: not vectorized: no vectype for stmt: vect__229.197_521 = MEM[(double *)vectp.195_523];
 scalar_type: vector(2) double
backend/qecc.c:217:32: note: not vectorized: no vectype for stmt: vect__229.198_519 = MEM[(double *)vectp.195_520];
 scalar_type: vector(2) double
backend/qecc.c:217:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.206_502] = vect_inter_high_500;
 scalar_type: vector(2) double
backend/qecc.c:217:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.206_497] = vect_inter_low_499;
 scalar_type: vector(2) double
backend/qecc.c:217:32: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:217:32: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:216:36: note: not consecutive access _536 = *_223;
backend/qecc.c:216:36: note: Build SLP failed: unvectorizable statement _536 = *_223;
backend/qecc.c:216:36: note: not ssa-name.
backend/qecc.c:216:36: note: use not simple.
backend/qecc.c:216:36: note: not ssa-name.
backend/qecc.c:216:36: note: use not simple.
backend/qecc.c:216:36: note: not vectorized: vectorization is not profitable.
backend/qecc.c:216:5: note: not consecutive access _591 = *_223;
backend/qecc.c:216:5: note: Build SLP failed: unvectorizable statement _591 = *_223;
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: not ssa-name.
backend/qecc.c:216:5: note: use not simple.
backend/qecc.c:216:5: note: not vectorized: vectorization is not profitable.
backend/qecc.c:215:4: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:191:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:193:3: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:226:1: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:243:2: note: not vectorized: number of iterations cannot be computed.
backend/qecc.c:243:2: note: bad loop form.
backend/qecc.c:243:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:244:3: note: not consecutive access _6 = *_5;
backend/qecc.c:244:3: note: not consecutive access _9 = *_8;
backend/qecc.c:244:3: note: not consecutive access _1 = consts_19(D)->pauli;
backend/qecc.c:244:3: note: not vectorized: no grouped stores in basic block.
backend/qecc.c:243:2: note: not vectorized: not enough data-refs in basic block.
backend/qecc.c:249:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not vectorized: control flow in loop.
backend/effective.c:97:3: note: bad loop form.
backend/effective.c:88:3: note: not vectorized: not suitable for gather load _108 = *_107;
backend/effective.c:88:3: note: bad data references.

backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_117 and *_141
backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_117 and *_141
backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_117 and *_141

backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.

backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_87 and *_98
backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_87 and *_98
backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_87 and *_98

backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:69:3: note: not vectorized: multiple nested loops.
backend/effective.c:69:3: note: bad loop form.
backend/effective.c:76:5: note: bad data references.

backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.

backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:61:20: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:62:16: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:64:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:65:10: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:70:7: note: not consecutive access _23 = *_22;
backend/effective.c:70:7: note: not consecutive access _18 = sim_1(D)->syndprobs;
backend/effective.c:70:7: note: not consecutive access _25 = consts_24(D)->atol;
backend/effective.c:70:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:72:5: note: not consecutive access _29 = *_28;
backend/effective.c:72:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:73:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:76:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:45: note: not consecutive access _41 = *_40;
backend/effective.c:74:45: note: not consecutive access _39 = sim_1(D)->syndprobs;
backend/effective.c:74:45: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:45: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: vect__36.70_130 = MEM[(double *)vectp_avg.68_121];
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: vect__38.73_140 = MEM[(double *)vectp_metvals.71_138];
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_avg.76_164] = vect__43.75_163;
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:73:38: note: not consecutive access _81 = *_80;
backend/effective.c:73:38: note: not consecutive access _79 = *_211;
backend/effective.c:73:38: note: not consecutive access *_211 = _94;
backend/effective.c:73:38: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:97: note: not consecutive access _59 = *_58;
backend/effective.c:78:97: note: not consecutive access _70 = *_69;
backend/effective.c:78:97: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:72: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:78:72: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: vect__56.56_399 = MEM[(double *)vectp.54_401];
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: vect__67.59_397 = MEM[(double *)vectp.57_400];
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.62_373] = vect__72.61_387;
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:49: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:77:38: note: not consecutive access _459 = *_458;
backend/effective.c:77:38: note: not consecutive access *_458 = _448;
backend/effective.c:77:38: note: not consecutive access _446 = *_449;
backend/effective.c:77:38: note: not vectorized: no grouped stores in basic block.
backend/effective.c:76:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:88:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:86:16: note: not consecutive access _83 = *_82;
backend/effective.c:86:16: note: not consecutive access _97 = *_96;
backend/effective.c:86:16: note: not vectorized: no grouped stores in basic block.
backend/effective.c:86:16: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__88.35_223 = MEM[(double *)vectp.33_225];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__90.38_213 = MEM[(double *)vectp_avg.36_222];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.41_208] = vect__93.40_209;
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__99.46_196 = MEM[(double *)vectp.44_199];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.48_160] = vect__100.47_195;
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no grouped stores in basic block.
backend/effective.c:86:31: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:84:36: note: not consecutive access _240 = *_241;
backend/effective.c:84:36: note: not consecutive access _242 = *_243;
backend/effective.c:84:36: note: not consecutive access *_243 = _238;
backend/effective.c:84:36: note: not consecutive access _234 = *_235;
backend/effective.c:84:36: note: not consecutive access *_235 = _233;
backend/effective.c:84:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:84:3: note: not consecutive access _259 = *_260;
backend/effective.c:84:3: note: not consecutive access _261 = *_262;
backend/effective.c:84:3: note: not consecutive access *_262 = _257;
backend/effective.c:84:3: note: not consecutive access _253 = *_254;
backend/effective.c:84:3: note: not consecutive access *_254 = _252;
backend/effective.c:84:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:89:36: note: not consecutive access _385 = *_391;
backend/effective.c:89:36: note: not consecutive access _365 = *_366;
backend/effective.c:89:36: note: not consecutive access *_366 = _364;
backend/effective.c:89:36: note: not consecutive access _407 = *_408;
backend/effective.c:89:36: note: not consecutive access *_408 = _378;
backend/effective.c:89:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:89:4: note: not consecutive access _438 = *_439;
backend/effective.c:89:4: note: not consecutive access _431 = *_432;
backend/effective.c:89:4: note: not consecutive access *_432 = _421;
backend/effective.c:89:4: note: not consecutive access _443 = *_444;
backend/effective.c:89:4: note: not consecutive access *_444 = _436;
backend/effective.c:89:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:89:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__118.14_354 = MEM[(double *)vectp.12_356];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__127.17_348 = MEM[(double *)vectp.15_350];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.20_344] = vect__129.19_345;
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__142.25_296 = MEM[(double *)vectp.23_298];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.27_281] = vect__143.26_294;
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no grouped stores in basic block.
backend/effective.c:88:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:91:67: note: not consecutive access _108 = *_107;
backend/effective.c:91:67: note: not consecutive access _133 = *_132;
backend/effective.c:91:67: note: not consecutive access _113 = *_112;
backend/effective.c:91:67: note: not vectorized: no grouped stores in basic block.
backend/effective.c:30:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:33:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:34:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:120:2: note: not consecutive access _185 = *_184;
backend/effective.c:120:2: note: not consecutive access *_184 = _186;
backend/effective.c:120:2: note: not consecutive access _180 = sim_1(D)->statsperlevel;
backend/effective.c:120:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:124:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:99:29: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:30:30: note: not consecutive access _158 = *_157;
backend/effective.c:30:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:33:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:34:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not consecutive access _176 = *_175;
backend/effective.c:97:3: note: not consecutive access *_175 = _177;
backend/effective.c:97:3: note: not consecutive access _166 = *_165;
backend/effective.c:97:3: note: not consecutive access _168 = *_167;
backend/effective.c:97:3: note: not consecutive access _172 = *_171;
backend/effective.c:97:3: note: not consecutive access _179 = sim_1(D)->nmetrics;
backend/effective.c:97:3: note: not consecutive access _161 = sim_1(D)->bins;
backend/effective.c:97:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:20:26: note: not vectorized: control flow in loop.
backend/effective.c:20:26: note: bad loop form.
backend/effective.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:21:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:21:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:33:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:34:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:35:9: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: step unknown.
backend/effective.c:46:2: note: Unknown misalignment, naturally aligned
backend/effective.c:46:2: note: not ssa-name.
backend/effective.c:46:2: note: use not simple.
backend/effective.c:46:2: note: not ssa-name.
backend/effective.c:46:2: note: use not simple.
backend/effective.c:46:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:46:2: note: no optab.
backend/effective.c:46:2: note: no optab.
backend/effective.c:46:2: note: no optab.
backend/effective.c:46:2: note: reduc op not supported by target.
backend/effective.c:46:2: note: reduc op not supported by target.
backend/effective.c:46:2: note: not vectorized: control flow in loop.
backend/effective.c:46:2: note: bad loop form.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: no vectype for stmt: vect__38.182_102 = MEM[(int *)vectp_arr.180_100];
 scalar_type: vector(4) int
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:48:11: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:48:11: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:48:11: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:46:28: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:48:11: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:47:27: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:50:19: note: not consecutive access *_8 = _5;
backend/effective.c:50:19: note: not consecutive access pretmp_50 = *arr_17(D);
backend/effective.c:50:19: note: not vectorized: no grouped stores in basic block.
backend/effective.c:46:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:53:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:54:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:55:9: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not vectorized: control flow in loop.
backend/effective.c:97:3: note: bad loop form.
backend/effective.c:88:3: note: not vectorized: not suitable for gather load _88 = *_87;
backend/effective.c:88:3: note: bad data references.

backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_95 and *_117
backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_95 and *_117
backend/effective.c:89:4: note: versioning for alias required: can't determine dependence between *_95 and *_117

backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: Unknown misalignment, naturally aligned
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.
backend/effective.c:89:4: note: not ssa-name.
backend/effective.c:89:4: note: use not simple.

backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_70 and *_79
backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_70 and *_79
backend/effective.c:84:3: note: versioning for alias required: can't determine dependence between *_70 and *_79

backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: Unknown misalignment, naturally aligned
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:84:3: note: not ssa-name.
backend/effective.c:84:3: note: use not simple.
backend/effective.c:69:3: note: not vectorized: multiple nested loops.
backend/effective.c:69:3: note: bad loop form.
backend/effective.c:76:5: note: bad data references.

backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: Unknown misalignment, naturally aligned
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.
backend/effective.c:77:6: note: not ssa-name.
backend/effective.c:77:6: note: use not simple.

backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: Unknown misalignment, naturally aligned
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:73:5: note: not ssa-name.
backend/effective.c:73:5: note: use not simple.
backend/effective.c:112:3: note: not vectorized: not suitable for gather load _194 = *_193;
backend/effective.c:112:3: note: bad data references.

backend/effective.c:113:4: note: versioning for alias required: can't determine dependence between *_201 and *_235
backend/effective.c:113:4: note: versioning for alias required: can't determine dependence between *_201 and *_221
backend/effective.c:113:4: note: versioning for alias required: can't determine dependence between *_201 and *_235
backend/effective.c:113:4: note: versioning for alias required: can't determine dependence between *_221 and *_235
backend/effective.c:113:4: note: Unknown misalignment, naturally aligned
backend/effective.c:113:4: note: Unknown misalignment, naturally aligned
backend/effective.c:113:4: note: Unknown misalignment, naturally aligned
backend/effective.c:113:4: note: Unknown misalignment, naturally aligned
backend/effective.c:113:4: note: not ssa-name.
backend/effective.c:113:4: note: use not simple.
backend/effective.c:113:4: note: not ssa-name.
backend/effective.c:113:4: note: use not simple.
backend/effective.c:113:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:113:4: note: not ssa-name.
backend/effective.c:113:4: note: use not simple.
backend/effective.c:113:4: note: not ssa-name.
backend/effective.c:113:4: note: use not simple.

backend/effective.c:108:3: note: versioning for alias required: can't determine dependence between *_165 and *_186
backend/effective.c:108:3: note: versioning for alias required: can't determine dependence between *_165 and *_179
backend/effective.c:108:3: note: versioning for alias required: can't determine dependence between *_165 and *_186
backend/effective.c:108:3: note: versioning for alias required: can't determine dependence between *_179 and *_186
backend/effective.c:108:3: note: Unknown misalignment, naturally aligned
backend/effective.c:108:3: note: Unknown misalignment, naturally aligned
backend/effective.c:108:3: note: Unknown misalignment, naturally aligned
backend/effective.c:108:3: note: Unknown misalignment, naturally aligned
backend/effective.c:108:3: note: not ssa-name.
backend/effective.c:108:3: note: use not simple.
backend/effective.c:108:3: note: not ssa-name.
backend/effective.c:108:3: note: use not simple.
backend/effective.c:108:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:108:3: note: not ssa-name.
backend/effective.c:108:3: note: use not simple.
backend/effective.c:108:3: note: not ssa-name.
backend/effective.c:108:3: note: use not simple.
backend/effective.c:61:20: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:62:16: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:64:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:68:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:65:10: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:108:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:112:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:70:7: note: not consecutive access _17 = *_16;
backend/effective.c:70:7: note: not consecutive access _13 = sim_266(D)->syndprobs;
backend/effective.c:70:7: note: not consecutive access _18 = consts_275(D)->atol;
backend/effective.c:70:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:72:5: note: not consecutive access _22 = *_21;
backend/effective.c:72:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:73:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:76:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:45: note: not consecutive access _33 = *_32;
backend/effective.c:74:45: note: not consecutive access _31 = sim_266(D)->syndprobs;
backend/effective.c:74:45: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:45: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: vect__28.267_521 = MEM[(double *)vectp_avg.265_525];
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: vect__30.270_520 = MEM[(double *)vectp_metvals.268_518];
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_avg.273_506] = vect__35.272_510;
 scalar_type: vector(2) double
backend/effective.c:74:13: note: not vectorized: no grouped stores in basic block.
backend/effective.c:74:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:73:38: note: not consecutive access _563 = *_562;
backend/effective.c:73:38: note: not consecutive access _565 = *_566;
backend/effective.c:73:38: note: not consecutive access *_566 = _551;
backend/effective.c:73:38: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:97: note: not consecutive access _46 = *_45;
backend/effective.c:78:97: note: not consecutive access _57 = *_56;
backend/effective.c:78:97: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:72: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:78:72: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: vect__43.253_242 = MEM[(double *)vectp.251_244];
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: vect__54.256_239 = MEM[(double *)vectp.254_241];
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.259_588] = vect__59.258_600;
 scalar_type: vector(2) double
backend/effective.c:78:49: note: not vectorized: no grouped stores in basic block.
backend/effective.c:78:49: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:77:38: note: not consecutive access _291 = *_305;
backend/effective.c:77:38: note: not consecutive access *_305 = _259;
backend/effective.c:77:38: note: not consecutive access _261 = *_262;
backend/effective.c:77:38: note: not vectorized: no grouped stores in basic block.
backend/effective.c:76:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:69:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:88:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:86:16: note: not consecutive access _67 = *_66;
backend/effective.c:86:16: note: not consecutive access _78 = *_77;
backend/effective.c:86:16: note: not vectorized: no grouped stores in basic block.
backend/effective.c:86:16: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__71.232_405 = MEM[(double *)vectp.230_407];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__73.235_384 = MEM[(double *)vectp_avg.233_404];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.238_378] = vect__75.237_379;
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: vect__80.243_365 = MEM[(double *)vectp.241_369];
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.245_361] = vect__81.244_364;
 scalar_type: vector(2) double
backend/effective.c:86:31: note: not vectorized: no grouped stores in basic block.
backend/effective.c:86:31: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:84:36: note: not consecutive access _424 = *_425;
backend/effective.c:84:36: note: not consecutive access *_425 = _420;
backend/effective.c:84:36: note: not consecutive access _416 = *_417;
backend/effective.c:84:36: note: not consecutive access *_417 = _415;
backend/effective.c:84:36: note: not consecutive access _422 = *_423;
backend/effective.c:84:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:84:3: note: not consecutive access _443 = *_444;
backend/effective.c:84:3: note: not consecutive access *_444 = _439;
backend/effective.c:84:3: note: not consecutive access _435 = *_436;
backend/effective.c:84:3: note: not consecutive access *_436 = _434;
backend/effective.c:84:3: note: not consecutive access _441 = *_442;
backend/effective.c:84:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:84:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:89:36: note: not consecutive access _527 = *_528;
backend/effective.c:89:36: note: not consecutive access *_528 = _514;
backend/effective.c:89:36: note: not consecutive access _536 = *_537;
backend/effective.c:89:36: note: not consecutive access _550 = *_552;
backend/effective.c:89:36: note: not consecutive access *_552 = _531;
backend/effective.c:89:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:89:4: note: not consecutive access _568 = *_569;
backend/effective.c:89:4: note: not consecutive access *_569 = _567;
backend/effective.c:89:4: note: not consecutive access _578 = *_579;
backend/effective.c:89:4: note: not consecutive access _590 = *_591;
backend/effective.c:89:4: note: not consecutive access *_591 = _572;
backend/effective.c:89:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:89:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__96.211_485 = MEM[(double *)vectp.209_487];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__104.214_479 = MEM[(double *)vectp.212_481];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.217_475] = vect__106.216_476;
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: vect__118.222_466 = MEM[(double *)vectp.220_468];
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.224_461] = vect__119.223_465;
 scalar_type: vector(2) double
backend/effective.c:91:67: note: not vectorized: no grouped stores in basic block.
backend/effective.c:88:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:91:67: note: not consecutive access _88 = *_87;
backend/effective.c:91:67: note: not consecutive access _109 = *_108;
backend/effective.c:91:67: note: not consecutive access _92 = *_91;
backend/effective.c:91:67: note: not vectorized: no grouped stores in basic block.
backend/effective.c:30:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:33:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:34:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:102:35: note: not consecutive access _155 = *_154;
backend/effective.c:102:35: note: not consecutive access *_154 = _156;
backend/effective.c:102:35: note: not consecutive access _150 = sim_266(D)->statsperlevel;
backend/effective.c:102:35: note: not vectorized: no grouped stores in basic block.
backend/effective.c:99:29: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:30:30: note: not consecutive access _130 = *_129;
backend/effective.c:30:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:33:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:34:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:97:3: note: not consecutive access _147 = *_146;
backend/effective.c:97:3: note: not consecutive access *_146 = _148;
backend/effective.c:97:3: note: not consecutive access _137 = *_136;
backend/effective.c:97:3: note: not consecutive access _139 = *_138;
backend/effective.c:97:3: note: not consecutive access _143 = *_142;
backend/effective.c:97:3: note: not consecutive access _149 = sim_266(D)->nmetrics;
backend/effective.c:97:3: note: not consecutive access _132 = sim_266(D)->bins;
backend/effective.c:97:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:110:19: note: not consecutive access _162 = *_161;
backend/effective.c:110:19: note: not consecutive access _169 = *_168;
backend/effective.c:110:19: note: not consecutive access _178 = *_177;
backend/effective.c:110:19: note: not consecutive access _185 = *_184;
backend/effective.c:110:19: note: not vectorized: no grouped stores in basic block.
backend/effective.c:110:19: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:110:34: note: not vectorized: no vectype for stmt: vect__166.299_735 = MEM[(double *)vectp.297_733];
 scalar_type: vector(2) double
backend/effective.c:110:34: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.301_738] = vect__171.300_737;
 scalar_type: vector(2) double
backend/effective.c:110:34: note: not vectorized: no vectype for stmt: vect__180.305_743 = MEM[(double *)vectp.303_741];
 scalar_type: vector(2) double
backend/effective.c:110:34: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.309_748] = vect__187.308_747;
 scalar_type: vector(2) double
backend/effective.c:110:34: note: not vectorized: no grouped stores in basic block.
backend/effective.c:110:34: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:108:36: note: not consecutive access _717 = *_716;
backend/effective.c:108:36: note: not consecutive access *_716 = _718;
backend/effective.c:108:36: note: not consecutive access _721 = *_720;
backend/effective.c:108:36: note: not consecutive access *_724 = _725;
backend/effective.c:108:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:108:3: note: not consecutive access _699 = *_698;
backend/effective.c:108:3: note: not consecutive access *_698 = _700;
backend/effective.c:108:3: note: not consecutive access _703 = *_702;
backend/effective.c:108:3: note: not consecutive access *_706 = _707;
backend/effective.c:108:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:114:19: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:114:19: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:113:36: note: not consecutive access _636 = *_635;
backend/effective.c:113:36: note: not consecutive access *_639 = _640;
backend/effective.c:113:36: note: not consecutive access _629 = *_628;
backend/effective.c:113:36: note: not consecutive access *_628 = _630;
backend/effective.c:113:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:113:4: note: not consecutive access _614 = *_613;
backend/effective.c:113:4: note: not consecutive access *_617 = _618;
backend/effective.c:113:4: note: not consecutive access _133 = *_121;
backend/effective.c:113:4: note: not consecutive access *_121 = _134;
backend/effective.c:113:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:113:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:115:70: note: not vectorized: no vectype for stmt: vect__202.281_650 = MEM[(double *)vectp.279_648];
 scalar_type: vector(2) double
backend/effective.c:115:70: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.283_653] = vect__207.282_652;
 scalar_type: vector(2) double
backend/effective.c:115:70: note: not vectorized: no vectype for stmt: vect__222.287_661 = MEM[(double *)vectp.285_659];
 scalar_type: vector(2) double
backend/effective.c:115:70: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.291_669] = vect__236.290_665;
 scalar_type: vector(2) double
backend/effective.c:115:70: note: not vectorized: no grouped stores in basic block.
backend/effective.c:112:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:115:46: note: not consecutive access _194 = *_193;
backend/effective.c:115:46: note: not consecutive access _205 = *_204;
backend/effective.c:115:46: note: not consecutive access _214 = *_213;
backend/effective.c:115:46: note: not consecutive access _227 = *_226;
backend/effective.c:115:46: note: not consecutive access _198 = *_197;
backend/effective.c:115:46: note: not vectorized: no grouped stores in basic block.
backend/effective.c:124:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:134:2: note: not vectorized: multiple nested loops.
backend/effective.c:134:2: note: bad loop form.
backend/effective.c:135:3: note: not vectorized: multiple nested loops.
backend/effective.c:135:3: note: bad loop form.
backend/effective.c:138:4: note: not vectorized: not suitable for gather load _38 = *_37;
backend/effective.c:138:4: note: bad data references.
backend/effective.c:139:5: note: not vectorized: not suitable for gather load _25 = *_24;
backend/effective.c:139:5: note: bad data references.
backend/effective.c:134:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:140:91: note: not vectorized: no vectype for stmt: *_7 = __complex__ (0.0, 0.0);
 scalar_type: complex double
backend/effective.c:140:91: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:139:5: note: not consecutive access _25 = *_24;
backend/effective.c:139:5: note: not consecutive access _16 = *_15;
backend/effective.c:139:5: note: not consecutive access _20 = *_19;
backend/effective.c:139:5: note: Build SLP failed: not grouped load _51 = REALPART_EXPR <_44>;
backend/effective.c:138:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:140:98: note: not consecutive access _38 = *_37;
backend/effective.c:140:98: note: not consecutive access _12 = *_11;
backend/effective.c:140:98: note: not consecutive access _33 = *_32;
backend/effective.c:140:98: note: not vectorized: no grouped stores in basic block.
backend/effective.c:135:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:134:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:140:98: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:144:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:159:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/effective.c:150:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/effective.c:148:26: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:150:2: note: not consecutive access pretmp_13 = *pretmp_14;
backend/effective.c:150:2: note: not consecutive access pretmp_15 = consts_31(D)->pauli;
backend/effective.c:150:2: note: not consecutive access pretmp_14 = sim_32(D)->logical;
backend/effective.c:150:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:151:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:151:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:150:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:160:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:159:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:163:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:153:2: note: not consecutive access _41 = sim_32(D)->nmetrics;
backend/effective.c:153:2: note: not consecutive access _49 = *_48;
backend/effective.c:153:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:153:2: note: not consecutive access _58 = sim_32(D)->nmetrics;
backend/effective.c:153:2: note: not consecutive access _60 = *_59;
backend/effective.c:153:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:185:2: note: not vectorized: multiple nested loops.
backend/effective.c:185:2: note: bad loop form.
backend/effective.c:187:3: note: bad data references.
backend/effective.c:188:4: note: versioning for alias required: can't determine dependence between *_48 and *_54
backend/effective.c:188:4: note: Unknown misalignment, naturally aligned
backend/effective.c:188:4: note: Unknown misalignment, naturally aligned
backend/effective.c:188:4: note: not ssa-name.
backend/effective.c:188:4: note: use not simple.
backend/effective.c:188:4: note: not ssa-name.
backend/effective.c:188:4: note: use not simple.
backend/effective.c:188:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:172:2: note: not vectorized: multiple nested loops.
backend/effective.c:172:2: note: bad loop form.
backend/effective.c:173:3: note: bad data references.
backend/effective.c:174:4: note: versioning for alias required: can't determine dependence between *_10 and *_18
backend/effective.c:174:4: note: Unknown misalignment, naturally aligned
backend/effective.c:174:4: note: Unknown misalignment, naturally aligned
backend/effective.c:174:4: note: not ssa-name.
backend/effective.c:174:4: note: use not simple.
backend/effective.c:174:4: note: not ssa-name.
backend/effective.c:174:4: note: use not simple.
backend/effective.c:174:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:171:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:172:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:175:20: note: not consecutive access _15 = *_14;
backend/effective.c:175:20: note: not vectorized: no grouped stores in basic block.
backend/effective.c:175:23: note: not consecutive access _7 = *_6;
backend/effective.c:175:23: note: not consecutive access _17 = *_16;
backend/effective.c:175:23: note: not vectorized: no grouped stores in basic block.
backend/effective.c:175:23: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:175:30: note: not vectorized: no vectype for stmt: vect__19.496_203 = MEM[(double *)vectp.494_201];
 scalar_type: vector(2) double
backend/effective.c:175:30: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.497_204] = vect__19.496_203;
 scalar_type: vector(2) double
backend/effective.c:175:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:175:30: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:174:36: note: not consecutive access _193 = *_191;
backend/effective.c:174:36: note: not consecutive access *_192 = _193;
backend/effective.c:174:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:174:4: note: not consecutive access _157 = *_161;
backend/effective.c:174:4: note: not consecutive access *_160 = _157;
backend/effective.c:174:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:173:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:176:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:177:24: note: not consecutive access _25 = *_24;
backend/effective.c:177:24: note: not consecutive access _21 = sim_91(D)->virtchan;
backend/effective.c:177:24: note: not vectorized: no grouped stores in basic block.
backend/effective.c:177:12: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:172:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:173:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:181:2: note: not consecutive access _29 = *_28;
backend/effective.c:181:2: note: not consecutive access _28 = sim_91(D)->frames;
backend/effective.c:181:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:185:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:187:24: note: not consecutive access _77 = qcode_90(D)->nlogs;
backend/effective.c:187:24: note: not vectorized: no grouped stores in basic block.
backend/effective.c:187:3: note: not consecutive access _38 = *_33;
backend/effective.c:187:3: note: not consecutive access *_37 = _38;
backend/effective.c:187:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:185:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:189:28: note: not consecutive access _41 = *_40;
backend/effective.c:189:28: note: not consecutive access _51 = *_50;
backend/effective.c:189:28: note: not vectorized: no grouped stores in basic block.
backend/effective.c:189:31: note: not consecutive access _45 = *_44;
backend/effective.c:189:31: note: not consecutive access _53 = *_52;
backend/effective.c:189:31: note: not vectorized: no grouped stores in basic block.
backend/effective.c:189:31: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:189:38: note: not vectorized: no vectype for stmt: vect__55.487_20 = MEM[(double *)vectp.485_36];
 scalar_type: vector(2) double
backend/effective.c:189:38: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.488_182] = vect__55.487_20;
 scalar_type: vector(2) double
backend/effective.c:189:38: note: not vectorized: no grouped stores in basic block.
backend/effective.c:189:38: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:188:36: note: not consecutive access _79 = *_81;
backend/effective.c:188:36: note: not consecutive access *_80 = _79;
backend/effective.c:188:36: note: not vectorized: no grouped stores in basic block.
backend/effective.c:188:4: note: not consecutive access _137 = *_139;
backend/effective.c:188:4: note: not consecutive access *_138 = _137;
backend/effective.c:188:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:187:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:187:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:193:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:196:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:199:17: note: not consecutive access _63 = qcode_90(D)->nstabs;
backend/effective.c:199:17: note: not consecutive access _64 = sim_91(D)->syndprobs;
backend/effective.c:200:3: note: not consecutive access _65 = qcode_90(D)->nstabs;
backend/effective.c:200:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:201:3: note: not consecutive access _68 = qcode_90(D)->nstabs;
backend/effective.c:201:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:213:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:214:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:224:2: note: not vectorized: multiple nested loops.
backend/effective.c:224:2: note: bad loop form.
backend/effective.c:252:4: note: not vectorized: control flow in loop.
backend/effective.c:252:4: note: bad loop form.
backend/effective.c:253:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/effective.c:246:4: note: not vectorized: multiple nested loops.
backend/effective.c:246:4: note: bad loop form.
backend/effective.c:247:5: note: bad data references.
backend/effective.c:248:6: note: Unknown misalignment, naturally aligned
backend/effective.c:248:6: note: Unknown misalignment, naturally aligned
backend/effective.c:248:6: note: not ssa-name.
backend/effective.c:248:6: note: use not simple.
backend/effective.c:248:6: note: not ssa-name.
backend/effective.c:248:6: note: use not simple.
backend/effective.c:248:6: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:240:4: note: not vectorized: multiple nested loops.
backend/effective.c:240:4: note: bad loop form.
backend/effective.c:241:5: note: bad data references.

backend/effective.c:242:6: note: Unknown misalignment, naturally aligned
backend/effective.c:242:6: note: Unknown misalignment, naturally aligned
backend/effective.c:242:6: note: Unknown misalignment, naturally aligned
backend/effective.c:242:6: note: not ssa-name.
backend/effective.c:242:6: note: use not simple.
backend/effective.c:242:6: note: not ssa-name.
backend/effective.c:242:6: note: use not simple.
backend/effective.c:242:6: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:242:6: note: not ssa-name.
backend/effective.c:242:6: note: use not simple.
backend/effective.c:242:6: note: not ssa-name.
backend/effective.c:242:6: note: use not simple.
backend/effective.c:231:4: note: not vectorized: multiple nested loops.
backend/effective.c:231:4: note: bad loop form.
backend/effective.c:234:5: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/effective.c:236:6: note: Unknown misalignment, naturally aligned
backend/effective.c:236:6: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:243:63: note: not consecutive access pretmp_277 = *sims_156(D);
backend/effective.c:243:63: note: not consecutive access pretmp_279 = pretmp_277->importance;
backend/effective.c:243:63: note: not vectorized: no grouped stores in basic block.
backend/effective.c:226:6: note: not consecutive access _4 = *_3;
backend/effective.c:226:6: note: not consecutive access _5 = _4->hybrid;
backend/effective.c:226:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:229:15: note: not consecutive access _10 = *_9;
backend/effective.c:229:15: note: not consecutive access _6 = _4->ndecbins;
backend/effective.c:229:15: note: not vectorized: no grouped stores in basic block.
backend/effective.c:230:15: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:231:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:240:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:233:19: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:234:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:231:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:235:23: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:235:21: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:235:21: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:237:25: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.583_198] = { 0.0, 0.0 };
 scalar_type: vector(2) double
backend/effective.c:237:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:237:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:236:30: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:234:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:234:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:242:31: note: not consecutive access _272 = *_273;
backend/effective.c:242:31: note: not consecutive access *_273 = _269;
backend/effective.c:242:31: note: not consecutive access _270 = *_271;
backend/effective.c:242:31: note: not vectorized: no grouped stores in basic block.
backend/effective.c:243:52: note: not vectorized: no vectype for stmt: vect__51.572_257 = MEM[(double *)vectp.570_259];
 scalar_type: vector(2) double
backend/effective.c:243:52: note: not vectorized: no vectype for stmt: vect__62.575_254 = MEM[(double *)vectp.573_256];
 scalar_type: vector(2) double
backend/effective.c:243:52: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.577_252] = vect__63.576_253;
 scalar_type: vector(2) double
backend/effective.c:243:52: note: not vectorized: no grouped stores in basic block.
backend/effective.c:241:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:243:76: note: not consecutive access _47 = *_46;
backend/effective.c:243:76: note: not consecutive access _60 = *_59;
backend/effective.c:243:76: note: not vectorized: no grouped stores in basic block.
backend/effective.c:243:76: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:240:4: note: not consecutive access _75 = *_74;
backend/effective.c:240:4: note: not consecutive access *_74 = _76;
backend/effective.c:240:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:240:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:240:4: note: not consecutive access pretmp_299 = *_298;
backend/effective.c:240:4: note: not consecutive access pretmp_296 = _4->decbins;
backend/effective.c:240:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:241:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:243:73: note: not consecutive access _58 = *_57;
backend/effective.c:243:73: note: not consecutive access _53 = *_52;
backend/effective.c:243:73: note: not consecutive access _56 = *_55;
backend/effective.c:243:73: note: not consecutive access _43 = *_42;
backend/effective.c:243:73: note: not vectorized: no grouped stores in basic block.
backend/effective.c:243:73: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:248:31: note: not consecutive access _368 = *_232;
backend/effective.c:248:31: note: not consecutive access *_367 = _357;
backend/effective.c:248:31: note: not vectorized: no grouped stores in basic block.
backend/effective.c:249:35: note: not vectorized: no vectype for stmt: vect__96.562_314 = MEM[(double *)vectp.560_332];
 scalar_type: vector(2) double
backend/effective.c:249:35: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.564_311] = vect__111.563_312;
 scalar_type: vector(2) double
backend/effective.c:249:35: note: not vectorized: no grouped stores in basic block.
backend/effective.c:247:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:249:28: note: not consecutive access _92 = *_91;
backend/effective.c:249:28: note: not consecutive access _109 = *_108;
backend/effective.c:249:28: note: not vectorized: no grouped stores in basic block.
backend/effective.c:249:28: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:246:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:249:25: note: not consecutive access _99 = *_98;
backend/effective.c:249:25: note: not consecutive access _84 = *_83;
backend/effective.c:249:25: note: not consecutive access _88 = *_87;
backend/effective.c:249:25: note: not consecutive access _107 = *_106;
backend/effective.c:249:25: note: not consecutive access _102 = *_52;
backend/effective.c:249:25: note: not consecutive access _105 = *_104;
backend/effective.c:249:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:252:4: note: not consecutive access _206 = *_200;
backend/effective.c:252:4: note: not consecutive access _196 = pretmp_277->ndecbins;
backend/effective.c:252:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:254:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:253:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:252:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:253:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:224:57: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:224:20: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:224:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:261:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:290:2: note: not vectorized: multiple nested loops.
backend/effective.c:290:2: note: bad loop form.
backend/effective.c:396:3: note: not vectorized: control flow in loop.
backend/effective.c:396:3: note: bad loop form.
backend/effective.c:299:3: note: not vectorized: multiple nested loops.
backend/effective.c:299:3: note: bad loop form.
backend/effective.c:345:6: note: bad data references.
backend/effective.c:346:7: note: versioning for alias required: can't determine dependence between *_161 and *_171
backend/effective.c:346:7: note: Unknown misalignment, naturally aligned
backend/effective.c:346:7: note: Unknown misalignment, naturally aligned
backend/effective.c:346:7: note: not ssa-name.
backend/effective.c:346:7: note: use not simple.
backend/effective.c:346:7: note: not ssa-name.
backend/effective.c:346:7: note: use not simple.
backend/effective.c:346:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:363:6: note: bad data references.
backend/effective.c:364:7: note: versioning for alias required: can't determine dependence between *_218 and *_228
backend/effective.c:364:7: note: Unknown misalignment, naturally aligned
backend/effective.c:364:7: note: Unknown misalignment, naturally aligned
backend/effective.c:364:7: note: not ssa-name.
backend/effective.c:364:7: note: use not simple.
backend/effective.c:364:7: note: not ssa-name.
backend/effective.c:364:7: note: use not simple.
backend/effective.c:364:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:382:6: note: bad data references.
backend/effective.c:383:7: note: versioning for alias required: can't determine dependence between *_312 and *_316
backend/effective.c:383:7: note: Unknown misalignment, naturally aligned
backend/effective.c:383:7: note: Unknown misalignment, naturally aligned
backend/effective.c:383:7: note: not ssa-name.
backend/effective.c:383:7: note: use not simple.
backend/effective.c:383:7: note: not ssa-name.
backend/effective.c:383:7: note: use not simple.
backend/effective.c:383:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:375:6: note: bad data references.
backend/effective.c:376:7: note: versioning for alias required: can't determine dependence between *_271 and *_281
backend/effective.c:376:7: note: Unknown misalignment, naturally aligned
backend/effective.c:376:7: note: Unknown misalignment, naturally aligned
backend/effective.c:376:7: note: not ssa-name.
backend/effective.c:376:7: note: use not simple.
backend/effective.c:376:7: note: not ssa-name.
backend/effective.c:376:7: note: use not simple.
backend/effective.c:376:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:320:4: note: not vectorized: multiple nested loops.
backend/effective.c:320:4: note: bad loop form.
backend/effective.c:324:5: note: not vectorized: multiple nested loops.
backend/effective.c:324:5: note: bad loop form.
backend/effective.c:325:6: note: bad data references.
backend/effective.c:326:7: note: versioning for alias required: can't determine dependence between *_85 and *_95
backend/effective.c:326:7: note: Unknown misalignment, naturally aligned
backend/effective.c:326:7: note: Unknown misalignment, naturally aligned
backend/effective.c:326:7: note: not ssa-name.
backend/effective.c:326:7: note: use not simple.
backend/effective.c:326:7: note: not ssa-name.
backend/effective.c:326:7: note: use not simple.
backend/effective.c:326:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:292:3: note: not vectorized: control flow in loop.
backend/effective.c:292:3: note: bad loop form.
backend/effective.c:270:2: note: not vectorized: number of iterations cannot be computed.
backend/effective.c:270:2: note: bad loop form.
backend/effective.c:268:15: note: not consecutive access _2 = _1->nlevels;
backend/effective.c:268:15: note: not consecutive access _1 = *sims_401(D);
backend/effective.c:268:15: note: not vectorized: no grouped stores in basic block.
backend/effective.c:270:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:270:2: note: not consecutive access *_10 = _11;
backend/effective.c:270:2: note: not consecutive access _8 = *_7;
backend/effective.c:270:2: note: not consecutive access _13 = _1->nlevels;
backend/effective.c:270:2: note: not consecutive access _11 = _8->N;
backend/effective.c:270:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:273:15: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:283:20: note: not consecutive access _22 = _21->nstabs;
backend/effective.c:283:20: note: not consecutive access _21 = *qcode_404(D);
backend/effective.c:283:20: note: not vectorized: no grouped stores in basic block.
backend/effective.c:286:17: note: not consecutive access _30 = _29->importance;
backend/effective.c:286:17: note: not consecutive access _29 = *sims_401(D);
backend/effective.c:286:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:290:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:293:4: note: not consecutive access _40 = *_39;
backend/effective.c:293:4: note: not consecutive access _35 = pretmp_651->K;
backend/effective.c:293:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:292:58: note: not consecutive access pretmp_647 = *sims_401(D);
backend/effective.c:292:58: note: not consecutive access pretmp_649 = pretmp_647->importance;
backend/effective.c:292:58: note: not vectorized: no grouped stores in basic block.
backend/effective.c:292:21: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:292:3: note: not consecutive access pretmp_651 = *_33;
backend/effective.c:292:3: note: not consecutive access pretmp_652 = pretmp_651->N;
backend/effective.c:292:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:296:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:297:3: note: not consecutive access _51 = prephitmp_796->importance;
backend/effective.c:297:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:299:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:319:40: note: not consecutive access pretmp_811 = *_33;
backend/effective.c:319:40: note: not consecutive access pretmp_813 = pretmp_811->nlogs;
backend/effective.c:319:40: note: not vectorized: no grouped stores in basic block.
backend/effective.c:319:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:324:5: note: not consecutive access *_66 = 1;
backend/effective.c:324:5: note: not consecutive access pretmp_815 = *_761;
backend/effective.c:324:5: note: not consecutive access _383 = pretmp_654->N;
backend/effective.c:324:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:324:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:327:27: note: not consecutive access _75 = *_74;
backend/effective.c:327:27: note: not consecutive access _78 = *_77;
backend/effective.c:327:27: note: not consecutive access _69 = *_765;
backend/effective.c:327:27: note: not consecutive access _92 = *_91;
backend/effective.c:327:27: note: not consecutive access _88 = prephitmp_816->virtchan;
backend/effective.c:327:27: note: not vectorized: no grouped stores in basic block.
backend/effective.c:327:30: note: not consecutive access _82 = *_81;
backend/effective.c:327:30: note: not consecutive access _94 = *_93;
backend/effective.c:327:30: note: not vectorized: no grouped stores in basic block.
backend/effective.c:327:30: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:327:37: note: not vectorized: no vectype for stmt: vect__96.701_680 = MEM[(double *)vectp.699_686];
 scalar_type: vector(2) double
backend/effective.c:327:37: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.702_675] = vect__96.701_680;
 scalar_type: vector(2) double
backend/effective.c:327:37: note: not vectorized: no grouped stores in basic block.
backend/effective.c:327:37: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:326:42: note: not consecutive access _699 = *_702;
backend/effective.c:326:42: note: not consecutive access *_698 = _699;
backend/effective.c:326:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:326:7: note: not consecutive access _716 = *_725;
backend/effective.c:326:7: note: not consecutive access *_721 = _716;
backend/effective.c:326:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:325:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:328:9: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:329:33: note: not consecutive access _106 = *_105;
backend/effective.c:329:33: note: not consecutive access _102 = prephitmp_816->virtchan;
backend/effective.c:329:33: note: not vectorized: no grouped stores in basic block.
backend/effective.c:329:18: note: not consecutive access *_66 = _108;
backend/effective.c:329:18: note: not consecutive access pretmp_799 = *_761;
backend/effective.c:329:18: note: not vectorized: no grouped stores in basic block.
backend/effective.c:324:5: note: not consecutive access _119 = *_118;
backend/effective.c:324:5: note: not consecutive access _127 = *_126;
backend/effective.c:324:5: note: not consecutive access _122 = *_121;
backend/effective.c:324:5: note: not consecutive access _112 = *_33;
backend/effective.c:324:5: note: not consecutive access _111 = *_765;
backend/effective.c:324:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:325:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:336:5: note: not consecutive access _137 = *_136;
backend/effective.c:336:5: note: not consecutive access _135 = prephitmp_803->frames;
backend/effective.c:336:5: note: not vectorized: no grouped stores in basic block.
backend/effective.c:320:59: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:320:22: note: not consecutive access _140 = _139->importance;
backend/effective.c:320:22: note: not consecutive access _139 = *sims_401(D);
backend/effective.c:320:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:320:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:341:7: note: not consecutive access _143 = _142->nlevels;
backend/effective.c:341:7: note: not consecutive access _142 = *sims_401(D);
backend/effective.c:341:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:341:7: note: not consecutive access pretmp_655 = *_33;
backend/effective.c:341:7: note: not consecutive access pretmp_658 = pretmp_655->nlogs;
backend/effective.c:341:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:342:8: note: not consecutive access pretmp_662 = *_33;
backend/effective.c:342:8: note: not consecutive access _145 = _142->importance;
backend/effective.c:342:8: note: not vectorized: no grouped stores in basic block.
backend/effective.c:343:17: note: not consecutive access _148 = _142->cumulative;
backend/effective.c:343:17: note: not consecutive access _147 = pretmp_662->nstabs;
backend/effective.c:343:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:345:6: note: not consecutive access _26 = *_33;
backend/effective.c:345:6: note: not consecutive access _55 = _26->nlogs;
backend/effective.c:345:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:347:22: note: not consecutive access _154 = *_153;
backend/effective.c:347:22: note: not consecutive access _163 = *_732;
backend/effective.c:347:22: note: not consecutive access _167 = *_166;
backend/effective.c:347:22: note: not consecutive access _150 = _149->effprocess;
backend/effective.c:347:22: note: not consecutive access _168 = *_167;
backend/effective.c:347:22: note: not consecutive access _149 = *sims_401(D);
backend/effective.c:347:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:347:25: note: not consecutive access _158 = *_157;
backend/effective.c:347:25: note: not consecutive access _170 = *_169;
backend/effective.c:347:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:347:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:347:32: note: not vectorized: no vectype for stmt: vect__172.665_611 = MEM[(double *)vectp.663_613];
 scalar_type: vector(2) double
backend/effective.c:347:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.666_610] = vect__172.665_611;
 scalar_type: vector(2) double
backend/effective.c:347:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:347:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:346:42: note: not consecutive access _621 = *_623;
backend/effective.c:346:42: note: not consecutive access *_622 = _621;
backend/effective.c:346:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:346:7: note: not consecutive access _639 = *_779;
backend/effective.c:346:7: note: not consecutive access *_676 = _639;
backend/effective.c:346:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:345:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:345:6: note: not consecutive access pretmp_752 = *_732;
backend/effective.c:345:6: note: not consecutive access pretmp_756 = *_754;
backend/effective.c:345:6: note: not consecutive access pretmp_746 = *sims_401(D);
backend/effective.c:345:6: note: not consecutive access pretmp_758 = *pretmp_756;
backend/effective.c:345:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:350:44: note: not consecutive access _185 = *_184;
backend/effective.c:350:44: note: not consecutive access _191 = *_190;
backend/effective.c:350:44: note: not consecutive access _193 = *_190;
backend/effective.c:350:44: note: not consecutive access _187 = prephitmp_747->syndprobs;
backend/effective.c:350:44: note: Build SLP failed: different operation in stmt MEM[(double *)_185 + 8B] = _192;
backend/effective.c:350:44: note: original stmt *_185 = 1.0e+0;
backend/effective.c:350:44: note: Build SLP failed: different operation in stmt MEM[(double *)_185 + 16B] = _193;
backend/effective.c:350:44: note: original stmt *_185 = 1.0e+0;
backend/effective.c:352:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:358:13: note: not consecutive access _197 = _142->syndprobs;
backend/effective.c:358:13: note: not consecutive access _196 = pretmp_662->nstabs;
backend/effective.c:359:6: note: not consecutive access _198 = *_33;
backend/effective.c:359:6: note: not consecutive access _199 = _198->nstabs;
backend/effective.c:359:6: note: not consecutive access _201 = _200->syndprobs;
backend/effective.c:359:6: note: not consecutive access _200 = *sims_401(D);
backend/effective.c:359:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:360:6: note: not consecutive access _202 = *_33;
backend/effective.c:360:6: note: not consecutive access _203 = _202->nstabs;
backend/effective.c:360:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:361:17: note: not consecutive access _204 = *_33;
backend/effective.c:361:17: note: not consecutive access _205 = _204->nstabs;
backend/effective.c:361:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:363:6: note: not consecutive access _365 = *_33;
backend/effective.c:363:6: note: not consecutive access _364 = _365->nlogs;
backend/effective.c:363:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:365:22: note: not consecutive access _211 = *_210;
backend/effective.c:365:22: note: not consecutive access _220 = *_704;
backend/effective.c:365:22: note: not consecutive access _224 = *_223;
backend/effective.c:365:22: note: not consecutive access _207 = _206->effprocess;
backend/effective.c:365:22: note: not consecutive access _225 = *_224;
backend/effective.c:365:22: note: not consecutive access _206 = *sims_401(D);
backend/effective.c:365:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:365:25: note: not consecutive access _215 = *_214;
backend/effective.c:365:25: note: not consecutive access _227 = *_226;
backend/effective.c:365:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:365:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:365:32: note: not vectorized: no vectype for stmt: vect__229.674_558 = MEM[(double *)vectp.672_560];
 scalar_type: vector(2) double
backend/effective.c:365:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.675_557] = vect__229.674_558;
 scalar_type: vector(2) double
backend/effective.c:365:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:365:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:364:42: note: not consecutive access _578 = *_580;
backend/effective.c:364:42: note: not consecutive access *_579 = _578;
backend/effective.c:364:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:364:7: note: not consecutive access _590 = *_592;
backend/effective.c:364:7: note: not consecutive access *_591 = _590;
backend/effective.c:364:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:363:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:363:6: note: not consecutive access pretmp_724 = *_704;
backend/effective.c:363:6: note: not consecutive access pretmp_728 = *_726;
backend/effective.c:363:6: note: not consecutive access pretmp_718 = *sims_401(D);
backend/effective.c:363:6: note: not consecutive access pretmp_730 = *pretmp_728;
backend/effective.c:363:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:369:44: note: not consecutive access _250 = *_249;
backend/effective.c:369:44: note: not consecutive access _237 = *_236;
backend/effective.c:369:44: note: not consecutive access _252 = *_236;
backend/effective.c:369:44: note: not consecutive access _254 = *_236;
backend/effective.c:369:44: note: not consecutive access _239 = *_238;
backend/effective.c:369:44: note: not consecutive access _233 = prephitmp_719->syndprobs;
backend/effective.c:369:44: note: Build SLP failed: different operation in stmt _253 = _252 * history_797;
backend/effective.c:369:44: note: original stmt _251 = _237 / _239;
backend/effective.c:369:44: note: Build SLP failed: unvectorizable statement _254 = *_236;
backend/effective.c:371:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:371:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:374:17: note: not consecutive access _258 = _257->cumulative;
backend/effective.c:374:17: note: not consecutive access _257 = MEM[(struct simul_t * *)sims_401(D) + 8B];
backend/effective.c:374:17: note: not consecutive access _256 = pretmp_662->nstabs;
backend/effective.c:374:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:375:6: note: not consecutive access _556 = *_33;
backend/effective.c:375:6: note: not consecutive access _554 = _556->nlogs;
backend/effective.c:375:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:377:22: note: not consecutive access _264 = *_263;
backend/effective.c:377:22: note: not consecutive access _273 = *_663;
backend/effective.c:377:22: note: not consecutive access _277 = *_276;
backend/effective.c:377:22: note: not consecutive access _260 = _259->effprocess;
backend/effective.c:377:22: note: not consecutive access _278 = MEM[(double * * *)_277 + 8B];
backend/effective.c:377:22: note: not consecutive access _259 = MEM[(struct simul_t * *)sims_401(D) + 8B];
backend/effective.c:377:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:377:25: note: not consecutive access _268 = *_267;
backend/effective.c:377:25: note: not consecutive access _280 = *_279;
backend/effective.c:377:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:377:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:377:32: note: not vectorized: no vectype for stmt: vect__282.692_789 = MEM[(double *)vectp.690_786];
 scalar_type: vector(2) double
backend/effective.c:377:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.693_788] = vect__282.692_789;
 scalar_type: vector(2) double
backend/effective.c:377:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:377:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:376:42: note: not consecutive access _12 = *_15;
backend/effective.c:376:42: note: not consecutive access *_14 = _12;
backend/effective.c:376:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:376:7: note: not consecutive access _131 = *_174;
backend/effective.c:376:7: note: not consecutive access *_173 = _131;
backend/effective.c:376:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:375:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:375:6: note: not consecutive access pretmp_683 = *_663;
backend/effective.c:375:6: note: not consecutive access pretmp_687 = *_685;
backend/effective.c:375:6: note: not consecutive access pretmp_677 = MEM[(struct simul_t * *)sims_401(D) + 8B];
backend/effective.c:375:6: note: not consecutive access pretmp_689 = MEM[(double * * *)pretmp_687 + 8B];
backend/effective.c:375:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:382:6: note: not consecutive access _295 = *_294;
backend/effective.c:382:6: note: not consecutive access _301 = *_300;
backend/effective.c:382:6: note: not consecutive access pretmp_691 = *sims_401(D);
backend/effective.c:382:6: note: not consecutive access _297 = prephitmp_678->syndprobs;
backend/effective.c:382:6: note: not consecutive access pretmp_692 = *prephitmp_688;
backend/effective.c:382:6: note: Build SLP failed: different operation in stmt MEM[(double *)_295 + 16B] = _301;
backend/effective.c:382:6: note: original stmt *_295 = 1.0e+0;
backend/effective.c:382:6: note: Build SLP failed: unrolling required in basic block SLP
backend/effective.c:387:44: note: not consecutive access _326 = *_325;
backend/effective.c:387:44: note: not consecutive access _323 = *_300;
backend/effective.c:387:44: note: not consecutive access _321 = *_320;
backend/effective.c:387:44: note: not consecutive access _328 = *_320;
backend/effective.c:387:44: note: not consecutive access _330 = *_320;
backend/effective.c:387:44: note: not consecutive access _319 = pretmp_691->syndprobs;
backend/effective.c:387:44: note: Build SLP failed: different operation in stmt _329 = _328 * history_797;
backend/effective.c:387:44: note: original stmt _327 = _322 / _323;
backend/effective.c:387:44: note: Build SLP failed: unvectorizable statement _330 = *_320;
backend/effective.c:384:55: note: not consecutive access _305 = *_304;
backend/effective.c:384:55: note: not consecutive access _303 = pretmp_691->effprocess;
backend/effective.c:384:55: note: not vectorized: no grouped stores in basic block.
backend/effective.c:384:25: note: not consecutive access _309 = *_308;
backend/effective.c:384:25: note: not consecutive access _315 = *_314;
backend/effective.c:384:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:384:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:384:32: note: not vectorized: no vectype for stmt: vect__317.683_366 = MEM[(double *)vectp.681_368];
 scalar_type: vector(2) double
backend/effective.c:384:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.684_363] = vect__317.683_366;
 scalar_type: vector(2) double
backend/effective.c:384:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:384:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:383:42: note: not consecutive access _384 = *_389;
backend/effective.c:383:42: note: not consecutive access *_386 = _384;
backend/effective.c:383:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:383:7: note: not consecutive access _490 = *_520;
backend/effective.c:383:7: note: not consecutive access *_497 = _490;
backend/effective.c:383:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:382:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:299:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:299:3: note: not consecutive access pretmp_807 = *_33;
backend/effective.c:299:3: note: not consecutive access pretmp_805 = *sims_401(D);
backend/effective.c:299:3: note: not consecutive access pretmp_809 = pretmp_807->nlogs;
backend/effective.c:299:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:394:3: note: not consecutive access _336 = prephitmp_806->importance;
backend/effective.c:394:3: note: not consecutive access _339 = prephitmp_808->N;
backend/effective.c:394:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:397:4: note: not consecutive access _346 = *_345;
backend/effective.c:397:4: note: not consecutive access _340 = *_33;
backend/effective.c:397:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:396:58: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:396:21: note: not consecutive access _348 = _347->importance;
backend/effective.c:396:21: note: not consecutive access _347 = *sims_401(D);
backend/effective.c:396:21: note: not vectorized: no grouped stores in basic block.
backend/effective.c:396:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:290:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:293:50: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:411:1: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:502:2: note: not vectorized: number of iterations cannot be computed.
backend/effective.c:502:2: note: bad loop form.
backend/effective.c:444:3: note: not vectorized: multiple nested loops.
backend/effective.c:444:3: note: bad loop form.
backend/effective.c:490:4: note: not vectorized: multiple nested loops.
backend/effective.c:490:4: note: bad loop form.
backend/effective.c:492:6: note: not vectorized: not suitable for gather load _209 = *_208;
backend/effective.c:492:6: note: bad data references.
backend/effective.c:20:26: note: not vectorized: control flow in loop.
backend/effective.c:20:26: note: bad loop form.
backend/effective.c:447:4: note: not vectorized: multiple nested loops.
backend/effective.c:447:4: note: bad loop form.
backend/effective.c:452:6: note: bad data references.
backend/effective.c:453:7: note: versioning for alias required: can't determine dependence between *_56 and *_65
backend/effective.c:453:7: note: Unknown misalignment, naturally aligned
backend/effective.c:453:7: note: Unknown misalignment, naturally aligned
backend/effective.c:453:7: note: not ssa-name.
backend/effective.c:453:7: note: use not simple.
backend/effective.c:453:7: note: not ssa-name.
backend/effective.c:453:7: note: use not simple.
backend/effective.c:453:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:462:6: note: bad data references.
backend/effective.c:463:7: note: versioning for alias required: can't determine dependence between *_100 and *_109
backend/effective.c:463:7: note: Unknown misalignment, naturally aligned
backend/effective.c:463:7: note: Unknown misalignment, naturally aligned
backend/effective.c:463:7: note: not ssa-name.
backend/effective.c:463:7: note: use not simple.
backend/effective.c:463:7: note: not ssa-name.
backend/effective.c:463:7: note: use not simple.
backend/effective.c:463:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/effective.c:472:6: note: not vectorized: multiple nested loops.
backend/effective.c:472:6: note: bad loop form.
backend/effective.c:473:7: note: not vectorized: control flow in loop.
backend/effective.c:473:7: note: bad loop form.
backend/effective.c:474:8: note: not vectorized: not suitable for gather load _142 = _141->levelOneChannels;
backend/effective.c:474:8: note: bad data references.
backend/effective.c:436:2: note: not vectorized: control flow in loop.
backend/effective.c:436:2: note: bad loop form.
backend/effective.c:425:2: note: not vectorized: number of iterations cannot be computed.
backend/effective.c:425:2: note: bad loop form.
backend/effective.c:415:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:422:15: note: not consecutive access _4 = _3->nlevels;
backend/effective.c:422:15: note: not consecutive access _3 = *sims_274(D);
backend/effective.c:422:15: note: not vectorized: no grouped stores in basic block.
backend/effective.c:425:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:425:2: note: not consecutive access *_16 = _17;
backend/effective.c:425:2: note: not consecutive access *_18 = _19;
backend/effective.c:425:2: note: not consecutive access _14 = *_13;
backend/effective.c:425:2: note: not consecutive access _21 = _3->nlevels;
backend/effective.c:425:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:425:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:430:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:431:15: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:433:2: note: not consecutive access _29 = _28->nlogs;
backend/effective.c:433:2: note: not consecutive access _30 = *sims_274(D);
backend/effective.c:433:2: note: not consecutive access _28 = *qcode_279(D);
backend/effective.c:433:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:437:3: note: not consecutive access _35 = *_34;
backend/effective.c:437:3: note: not consecutive access _31 = *qcode_279(D);
backend/effective.c:437:3: note: not vectorized: no grouped stores in basic block.
backend/effective.c:436:58: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:436:20: note: not consecutive access _37 = _36->importance;
backend/effective.c:436:20: note: not consecutive access _36 = *sims_274(D);
backend/effective.c:436:20: note: not vectorized: no grouped stores in basic block.
backend/effective.c:436:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:443:5: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:444:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:448:8: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:450:17: note: not consecutive access _42 = _41->nstabs;
backend/effective.c:450:17: note: not consecutive access _41 = *qcode_279(D);
backend/effective.c:450:17: note: not consecutive access _43 = prephitmp_429->levelOneCumul;
backend/effective.c:450:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:452:6: note: not consecutive access _338 = *qcode_279(D);
backend/effective.c:452:6: note: not consecutive access _366 = _338->nlogs;
backend/effective.c:452:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:454:22: note: not consecutive access _49 = *_48;
backend/effective.c:454:22: note: not consecutive access _61 = *_60;
backend/effective.c:454:22: note: not consecutive access _45 = _44->levelOneChannels;
backend/effective.c:454:22: note: not consecutive access _62 = *_61;
backend/effective.c:454:22: note: not consecutive access _44 = *sims_274(D);
backend/effective.c:454:22: note: not consecutive access _57 = *channels_284;
backend/effective.c:454:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:454:25: note: not consecutive access _53 = *_52;
backend/effective.c:454:25: note: not consecutive access _64 = *_63;
backend/effective.c:454:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:454:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:454:32: note: not vectorized: no vectype for stmt: vect__66.877_409 = MEM[(double *)vectp.875_411];
 scalar_type: vector(2) double
backend/effective.c:454:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.878_408] = vect__66.877_409;
 scalar_type: vector(2) double
backend/effective.c:454:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:454:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:453:42: note: not consecutive access _452 = *_454;
backend/effective.c:453:42: note: not consecutive access *_453 = _452;
backend/effective.c:453:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:453:7: note: not consecutive access _515 = *_532;
backend/effective.c:453:7: note: not consecutive access *_531 = _515;
backend/effective.c:453:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:452:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:452:6: note: not consecutive access pretmp_526 = *_524;
backend/effective.c:452:6: note: not consecutive access pretmp_516 = *sims_274(D);
backend/effective.c:452:6: note: not consecutive access pretmp_522 = *channels_284;
backend/effective.c:452:6: note: not consecutive access pretmp_528 = *pretmp_526;
backend/effective.c:452:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:457:44: note: not consecutive access _78 = *_77;
backend/effective.c:457:44: note: not consecutive access _84 = *_83;
backend/effective.c:457:44: note: not consecutive access _80 = prephitmp_517->levelOneSynds;
backend/effective.c:457:44: note: Build SLP failed: different operation in stmt MEM[(double *)_78 + 8B] = _84;
backend/effective.c:457:44: note: original stmt *_78 = 1.0e+0;
backend/effective.c:457:44: note: Build SLP failed: different operation in stmt MEM[(double *)_78 + 16B] = _84;
backend/effective.c:457:44: note: original stmt *_78 = 1.0e+0;
backend/effective.c:459:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:461:17: note: not consecutive access _86 = _85->nstabs;
backend/effective.c:461:17: note: not consecutive access _85 = *qcode_279(D);
backend/effective.c:461:17: note: not consecutive access _87 = prephitmp_429->levelOneImpCumul;
backend/effective.c:461:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:462:6: note: not consecutive access _380 = *qcode_279(D);
backend/effective.c:462:6: note: not consecutive access _364 = _380->nlogs;
backend/effective.c:462:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:464:22: note: not consecutive access _93 = *_92;
backend/effective.c:464:22: note: not consecutive access _105 = *_104;
backend/effective.c:464:22: note: not consecutive access _89 = _88->levelOneChannels;
backend/effective.c:464:22: note: not consecutive access _106 = *_105;
backend/effective.c:464:22: note: not consecutive access _88 = *sims_274(D);
backend/effective.c:464:22: note: not consecutive access _101 = *channels_284;
backend/effective.c:464:22: note: not vectorized: no grouped stores in basic block.
backend/effective.c:464:25: note: not consecutive access _97 = *_96;
backend/effective.c:464:25: note: not consecutive access _108 = *_107;
backend/effective.c:464:25: note: not vectorized: no grouped stores in basic block.
backend/effective.c:464:25: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:464:32: note: not vectorized: no vectype for stmt: vect__110.886_245 = MEM[(double *)vectp.884_248];
 scalar_type: vector(2) double
backend/effective.c:464:32: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.887_244] = vect__110.886_245;
 scalar_type: vector(2) double
backend/effective.c:464:32: note: not vectorized: no grouped stores in basic block.
backend/effective.c:464:32: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:463:42: note: not consecutive access _262 = *_270;
backend/effective.c:463:42: note: not consecutive access *_264 = _262;
backend/effective.c:463:42: note: not vectorized: no grouped stores in basic block.
backend/effective.c:463:7: note: not consecutive access _365 = *_368;
backend/effective.c:463:7: note: not consecutive access *_367 = _365;
backend/effective.c:463:7: note: not vectorized: no grouped stores in basic block.
backend/effective.c:462:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:462:6: note: not consecutive access pretmp_499 = *_497;
backend/effective.c:462:6: note: not consecutive access pretmp_489 = *sims_274(D);
backend/effective.c:462:6: note: not consecutive access pretmp_495 = *channels_284;
backend/effective.c:462:6: note: not consecutive access pretmp_501 = *pretmp_499;
backend/effective.c:462:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:467:44: note: not consecutive access _131 = *_130;
backend/effective.c:467:44: note: not consecutive access _118 = *_117;
backend/effective.c:467:44: note: not consecutive access _133 = *_117;
backend/effective.c:467:44: note: not consecutive access _121 = *_120;
backend/effective.c:467:44: note: Build SLP failed: unvectorizable statement _133 = *_117;
backend/effective.c:469:13: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:471:17: note: not consecutive access _135 = _134->nstabs;
backend/effective.c:471:17: note: not consecutive access _137 = _136->levelOneCumul;
backend/effective.c:471:17: note: not consecutive access _136 = MEM[(struct simul_t * *)sims_274(D) + 8B];
backend/effective.c:471:17: note: not consecutive access _134 = *qcode_279(D);
backend/effective.c:471:17: note: not vectorized: no grouped stores in basic block.
backend/effective.c:472:6: note: not consecutive access _379 = *qcode_279(D);
backend/effective.c:472:6: note: not consecutive access _361 = _379->nlogs;
backend/effective.c:472:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:475:62: note: not consecutive access pretmp_566 = *_565;
backend/effective.c:475:62: note: not consecutive access _166 = _165->importance;
backend/effective.c:475:62: note: not consecutive access _165 = *sims_274(D);
backend/effective.c:475:62: note: not consecutive access pretmp_563 = *channels_284;
backend/effective.c:475:62: note: not vectorized: no grouped stores in basic block.
backend/effective.c:474:8: note: not consecutive access _66 = *_65;
backend/effective.c:474:8: note: not consecutive access _98 = *_294;
backend/effective.c:474:8: note: not consecutive access _302 = *_110;
backend/effective.c:474:8: note: not consecutive access _459 = *_99;
backend/effective.c:474:8: note: not consecutive access *_357 = _459;
backend/effective.c:474:8: note: not consecutive access _55 = *_54;
backend/effective.c:474:8: note: not consecutive access _56 = _55->levelOneChannels;
backend/effective.c:474:8: note: not consecutive access _109 = *_100;
backend/effective.c:474:8: note: not vectorized: no grouped stores in basic block.
backend/effective.c:475:33: note: not consecutive access _146 = *_145;
backend/effective.c:475:33: note: not consecutive access _150 = *_149;
backend/effective.c:475:33: note: not consecutive access _162 = *_161;
backend/effective.c:475:33: note: not consecutive access _164 = *_153;
backend/effective.c:475:33: note: not consecutive access *_163 = _164;
backend/effective.c:475:33: note: not consecutive access _142 = _141->levelOneChannels;
backend/effective.c:475:33: note: not consecutive access _141 = *_140;
backend/effective.c:475:33: note: not consecutive access _160 = *_159;
backend/effective.c:475:33: note: not vectorized: no grouped stores in basic block.
backend/effective.c:473:7: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:474:8: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:472:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:475:72: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:475:72: note: not consecutive access pretmp_474 = *_472;
backend/effective.c:475:72: note: not consecutive access pretmp_468 = *sims_274(D);
backend/effective.c:475:72: note: not consecutive access pretmp_470 = *channels_284;
backend/effective.c:475:72: note: not vectorized: no grouped stores in basic block.
backend/effective.c:482:44: note: not consecutive access _188 = *_187;
backend/effective.c:482:44: note: not consecutive access _195 = *_194;
backend/effective.c:482:44: note: not consecutive access _174 = *_173;
backend/effective.c:482:44: note: not consecutive access _178 = *_177;
backend/effective.c:482:44: note: not consecutive access _196 = *_177;
backend/effective.c:482:44: note: not consecutive access _192 = *_191;
backend/effective.c:482:44: note: not consecutive access _176 = _175->levelOneSynds;
backend/effective.c:482:44: note: not consecutive access _175 = MEM[(struct simul_t * *)sims_274(D) + 8B];
backend/effective.c:482:44: note: Build SLP failed: unvectorizable statement _192 = *_191;
backend/effective.c:482:44: note: Build SLP failed: different operation in stmt MEM[(double *)_195 + 16B] = _196;
backend/effective.c:482:44: note: original stmt *_195 = 1.0e+0;
backend/effective.c:482:44: note: Build SLP failed: unrolling required in basic block SLP
backend/effective.c:447:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:447:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:490:4: note: not consecutive access _227 = _226->importance;
backend/effective.c:490:4: note: not consecutive access _226 = *sims_274(D);
backend/effective.c:490:4: note: not vectorized: no grouped stores in basic block.
backend/effective.c:20:2: note: not consecutive access _201 = *_200;
backend/effective.c:20:2: note: not consecutive access _202 = _201->nbreaks;
backend/effective.c:20:2: note: not consecutive access _203 = _201->runstats;
backend/effective.c:20:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:490:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:21:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:21:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:492:6: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:20:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:494:83: note: not consecutive access _216 = *_215;
backend/effective.c:494:83: note: not consecutive access _212 = _201->nlevels;
backend/effective.c:494:83: note: not vectorized: no grouped stores in basic block.
backend/effective.c:492:6: note: not consecutive access *_223 = _224;
backend/effective.c:492:6: note: not consecutive access _208 = *_207;
backend/effective.c:492:6: note: not consecutive access _218 = *_217;
backend/effective.c:492:6: note: not consecutive access _209 = *_208;
backend/effective.c:492:6: note: not consecutive access *_208 = _210;
backend/effective.c:492:6: note: not vectorized: no grouped stores in basic block.
backend/effective.c:444:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:447:4: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:502:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:503:3: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:502:2: note: not consecutive access _235 = _234->nlevels;
backend/effective.c:502:2: note: not consecutive access _234 = *sims_274(D);
backend/effective.c:502:2: note: not vectorized: no grouped stores in basic block.
backend/effective.c:502:2: note: not vectorized: not enough data-refs in basic block.
backend/effective.c:518:1: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:17:20: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:18:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:19:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:20:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:21:16: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:22:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:23:1: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:27:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:28:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:29:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:30:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:31:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:32:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:33:1: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:250:2: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/benchmark.c:242:2: note: not vectorized: control flow in loop.
backend/benchmark.c:242:2: note: bad loop form.
backend/benchmark.c:221:2: note: not vectorized: multiple nested loops.
backend/benchmark.c:221:2: note: bad loop form.
backend/benchmark.c:229:3: note: versioning for alias required: can't determine dependence between *_346 and *_352
backend/benchmark.c:229:3: note: Unknown misalignment, naturally aligned
backend/benchmark.c:229:3: note: Unknown misalignment, naturally aligned
backend/benchmark.c:229:3: note: not ssa-name.
backend/benchmark.c:229:3: note: use not simple.
backend/benchmark.c:229:3: note: not ssa-name.
backend/benchmark.c:229:3: note: use not simple.
backend/benchmark.c:229:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:222:3: note: not vectorized: multiple nested loops.
backend/benchmark.c:222:3: note: bad loop form.
backend/benchmark.c:225:4: note: bad data references.
backend/benchmark.c:226:5: note: versioning for alias required: can't determine dependence between *_320 and *_335
backend/benchmark.c:226:5: note: Unknown misalignment, naturally aligned
backend/benchmark.c:226:5: note: Unknown misalignment, naturally aligned
backend/benchmark.c:226:5: note: not ssa-name.
backend/benchmark.c:226:5: note: use not simple.
backend/benchmark.c:226:5: note: not ssa-name.
backend/benchmark.c:226:5: note: use not simple.
backend/benchmark.c:226:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:209:2: note: not vectorized: multiple nested loops.
backend/benchmark.c:209:2: note: bad loop form.
backend/benchmark.c:212:3: note: bad data references.
backend/benchmark.c:213:4: note: versioning for alias required: can't determine dependence between *_251 and *_262
backend/benchmark.c:213:4: note: versioning for alias required: can't determine dependence between *_251 and *_282
backend/benchmark.c:213:4: note: versioning for alias required: can't determine dependence between *_262 and *_273
backend/benchmark.c:213:4: note: versioning for alias required: can't determine dependence between *_273 and *_282
backend/benchmark.c:213:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:213:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:213:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:213:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:213:4: note: not ssa-name.
backend/benchmark.c:213:4: note: use not simple.
backend/benchmark.c:213:4: note: not ssa-name.
backend/benchmark.c:213:4: note: use not simple.
backend/benchmark.c:213:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:213:4: note: not ssa-name.
backend/benchmark.c:213:4: note: use not simple.
backend/benchmark.c:213:4: note: not ssa-name.
backend/benchmark.c:213:4: note: use not simple.
backend/benchmark.c:120:2: note: not vectorized: multiple nested loops.
backend/benchmark.c:120:2: note: bad loop form.
backend/benchmark.c:176:3: note: versioning for alias required: can't determine dependence between *_225 and *_228
backend/benchmark.c:176:3: note: Unknown misalignment, naturally aligned
backend/benchmark.c:176:3: note: Unknown misalignment, naturally aligned
backend/benchmark.c:176:3: note: not ssa-name.
backend/benchmark.c:176:3: note: use not simple.
backend/benchmark.c:176:3: note: not ssa-name.
backend/benchmark.c:176:3: note: use not simple.
backend/benchmark.c:176:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:172:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/benchmark.c:163:3: note: not vectorized: multiple nested loops.
backend/benchmark.c:163:3: note: bad loop form.
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_720 and *_726
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_720 and *_1143

backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_726 and *_1143
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_1144 and *_1143
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_166 and *_1010
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_166 and *_208

backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_1010 and *_208
backend/benchmark.c:164:4: note: versioning for alias required: can't determine dependence between *_203 and *_208
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:164:4: note: not ssa-name.
backend/benchmark.c:164:4: note: use not simple.
backend/benchmark.c:153:4: note: not vectorized: control flow in loop.
backend/benchmark.c:153:4: note: bad loop form.
backend/benchmark.c:154:5: note: not vectorized: number of iterations cannot be computed.
backend/benchmark.c:154:5: note: bad loop form.
backend/benchmark.c:138:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:138:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:141:4: note: versioning for alias required: can't determine dependence between consts_440->nclifford and *_119
backend/benchmark.c:141:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:141:4: note: not ssa-name.
backend/benchmark.c:141:4: note: use not simple.
backend/benchmark.c:141:4: note: not ssa-name.
backend/benchmark.c:141:4: note: use not simple.
backend/benchmark.c:141:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:144:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:144:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:112:2: note: not vectorized: not suitable for gather load _95 = _92->N;
backend/benchmark.c:112:2: note: bad data references.
backend/benchmark.c:78:2: note: not vectorized: multiple nested loops.
backend/benchmark.c:78:2: note: bad loop form.
backend/benchmark.c:100:3: note: not vectorized: not suitable for gather load _83 = *_82;
backend/benchmark.c:100:3: note: bad data references.
backend/benchmark.c:101:4: note: versioning for alias required: can't determine dependence between *_74 and REALPART_EXPR <*_86>
backend/benchmark.c:101:4: note: versioning for alias required: can't determine dependence between *_74 and IMAGPART_EXPR <*_86>
backend/benchmark.c:101:4: note: versioning for alias required: can't determine dependence between *_75 and REALPART_EXPR <*_86>
backend/benchmark.c:101:4: note: versioning for alias required: can't determine dependence between *_75 and IMAGPART_EXPR <*_86>
backend/benchmark.c:101:4: note: Build SLP failed: different operation in stmt _465 = *_74;
backend/benchmark.c:101:4: note: original stmt _78 = _76 + _77;
backend/benchmark.c:101:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:101:4: note: Unknown misalignment, naturally aligned
backend/benchmark.c:101:4: note: vector alignment may not be reachable
backend/benchmark.c:101:4: note: not ssa-name.
backend/benchmark.c:101:4: note: use not simple.
backend/benchmark.c:101:4: note: not ssa-name.
backend/benchmark.c:101:4: note: use not simple.
backend/benchmark.c:101:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/benchmark.c:101:4: note: not ssa-name.
backend/benchmark.c:101:4: note: use not simple.
backend/benchmark.c:101:4: note: not ssa-name.
backend/benchmark.c:101:4: note: use not simple.
backend/benchmark.c:101:4: note: no array mode for V2DF[2]
backend/benchmark.c:101:4: note: no array mode for V2DF[2]
backend/benchmark.c:101:4: note: no array mode for V2DF[2]
backend/benchmark.c:101:4: note: no array mode for V2DF[2]
backend/benchmark.c:92:3: note: not vectorized: multiple nested loops.
backend/benchmark.c:92:3: note: bad loop form.
backend/benchmark.c:93:4: note: not vectorized: control flow in loop.
backend/benchmark.c:93:4: note: bad loop form.
backend/benchmark.c:94:5: note: not vectorized: number of iterations cannot be computed.
backend/benchmark.c:94:5: note: bad loop form.
backend/benchmark.c:85:3: note: not vectorized: control flow in loop.
backend/benchmark.c:85:3: note: bad loop form.
backend/benchmark.c:86:4: note: not vectorized: number of iterations cannot be computed.
backend/benchmark.c:86:4: note: bad loop form.
backend/benchmark.c:76:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:78:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:80:14: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:84:3: note: not consecutive access *_5 = _6;
backend/benchmark.c:84:3: note: Build SLP failed: unrolling required in basic block SLP
backend/benchmark.c:85:3: note: not consecutive access _650 = *_5;
backend/benchmark.c:85:3: note: not consecutive access _634 = _650->nstabs;
backend/benchmark.c:85:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:87:26: note: not consecutive access _30 = *_29;
backend/benchmark.c:87:26: note: not consecutive access _26 = _650->projector;
backend/benchmark.c:87:26: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:86:4: note: not consecutive access _34 = *_25;
backend/benchmark.c:86:4: note: not consecutive access *_33 = _34;
backend/benchmark.c:86:4: note: not consecutive access _35 = _650->nstabs;
backend/benchmark.c:86:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:85:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:86:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:92:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:94:5: note: not consecutive access _635 = *_1019;
backend/benchmark.c:94:5: note: not consecutive access _57 = *_56;
backend/benchmark.c:94:5: note: not consecutive access _53 = *_52;
backend/benchmark.c:94:5: note: not consecutive access *_1185 = _635;
backend/benchmark.c:94:5: note: not consecutive access _520 = _650->N;
backend/benchmark.c:94:5: note: not consecutive access _49 = _650->action;
backend/benchmark.c:94:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:94:5: note: not consecutive access _61 = *_48;
backend/benchmark.c:94:5: note: not consecutive access *_60 = _61;
backend/benchmark.c:94:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:94:5: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:93:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:94:5: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:94:5: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:92:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:93:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:95:24: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:100:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:100:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:100:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:102:30: note: not vectorized: no vectype for stmt: vect__465.105_1308 = MEM[(double *)vectp.103_1306];
 scalar_type: vector(2) double
backend/benchmark.c:102:30: note: not vectorized: no vectype for stmt: vect__76.108_1314 = MEM[(double *)vectp.106_1312];
 scalar_type: vector(2) double
backend/benchmark.c:102:30: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.111_1318] = vect_inter_high_1320;
 scalar_type: vector(2) double
backend/benchmark.c:102:30: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.111_1323] = vect_inter_low_1321;
 scalar_type: vector(2) double
backend/benchmark.c:102:30: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:102:30: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:101:40: note: not consecutive access _1287 = *_1286;
backend/benchmark.c:101:40: note: not consecutive access _1289 = *_1288;
backend/benchmark.c:101:40: note: Build SLP failed: unvectorizable statement _1287 = *_1286;
backend/benchmark.c:101:4: note: not consecutive access _1267 = *_1266;
backend/benchmark.c:101:4: note: not consecutive access _1269 = *_1268;
backend/benchmark.c:101:4: note: Build SLP failed: unvectorizable statement _1267 = *_1266;
backend/benchmark.c:100:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:102:23: note: not consecutive access _83 = *_82;
backend/benchmark.c:102:23: note: not consecutive access _79 = _650->phases;
backend/benchmark.c:102:23: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:78:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:112:2: note: not consecutive access *_94 = _95;
backend/benchmark.c:112:2: note: not consecutive access _92 = *_91;
backend/benchmark.c:112:2: note: not consecutive access _95 = _92->N;
backend/benchmark.c:112:2: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:118:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:120:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:122:13: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:134:3: note: not consecutive access _106 = *_105;
backend/benchmark.c:134:3: note: not consecutive access *_100 = _101;
backend/benchmark.c:134:3: note: not consecutive access MEM[(struct simul_t *)_101].nmetrics = nmetrics_485(D);
backend/benchmark.c:134:3: note: not consecutive access MEM[(struct simul_t *)_101].nbins = nbins_490(D);
backend/benchmark.c:134:3: note: not consecutive access MEM[(struct simul_t *)_101].nbreaks = nbreaks_494(D);
backend/benchmark.c:134:3: note: not consecutive access MEM[(struct simul_t *)_101].hybrid = hybrid_488(D);
backend/benchmark.c:134:3: note: not consecutive access MEM[(struct simul_t *)_101].nstats = _106;
backend/benchmark.c:134:3: note: not consecutive access _107 = *qcode_444;
backend/benchmark.c:134:3: note: Build SLP failed: unrolling required in basic block SLP
backend/benchmark.c:137:6: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:138:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:139:13: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:139:13: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:139:26: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.82_153] = { 4, 4, 4, 4 };
 scalar_type: vector(4) int
backend/benchmark.c:139:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:139:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:138:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:138:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:138:32: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:140:11: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:144:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:146:35: note: not consecutive access *_130 = _131;
backend/benchmark.c:146:35: note: not consecutive access _131 = consts_440->nclifford;
backend/benchmark.c:146:35: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:141:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:142:13: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:142:13: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:142:26: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.91_1194] = vect_cst__1193;
 scalar_type: vector(4) int
backend/benchmark.c:142:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:142:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:141:4: note: not consecutive access *_118 = _119;
backend/benchmark.c:141:4: note: not consecutive access _119 = consts_440->nclifford;
backend/benchmark.c:141:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:141:4: note: not consecutive access *_125 = _505;
backend/benchmark.c:141:4: note: not consecutive access _505 = consts_440->nclifford;
backend/benchmark.c:141:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:141:32: note: not consecutive access *_171 = _172;
backend/benchmark.c:141:32: note: not consecutive access _172 = consts_440->nclifford;
backend/benchmark.c:141:32: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:141:4: note: not consecutive access *_192 = _193;
backend/benchmark.c:141:4: note: not consecutive access _193 = consts_440->nclifford;
backend/benchmark.c:141:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:141:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:141:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:145:26: note: not vectorized: no vectype for stmt: MEM[(int *)vectp_pretmp.97_1219] = { 4, 4, 4, 4 };
 scalar_type: vector(4) int
backend/benchmark.c:145:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:145:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:144:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:144:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:144:36: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:150:6: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:153:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:153:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:155:24: note: not consecutive access _142 = *_141;
backend/benchmark.c:155:24: note: not consecutive access _139 = pretmp_1035->decbins;
backend/benchmark.c:155:24: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:154:5: note: not consecutive access _146 = *_137;
backend/benchmark.c:154:5: note: not consecutive access _150 = *_662;
backend/benchmark.c:154:5: note: not consecutive access *_145 = _146;
backend/benchmark.c:154:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:153:4: note: not consecutive access _155 = *_151;
backend/benchmark.c:153:4: note: not consecutive access *_154 = _155;
backend/benchmark.c:153:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:153:4: note: not consecutive access pretmp_1035 = *_100;
backend/benchmark.c:153:4: note: not consecutive access pretmp_1040 = pretmp_1035->ndecbins;
backend/benchmark.c:153:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:154:5: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:162:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:163:3: note: not consecutive access _645 = *qcode_444;
backend/benchmark.c:163:3: note: not consecutive access _613 = _645->nlogs;
backend/benchmark.c:163:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:163:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:164:39: note: not consecutive access _293 = *_37;
backend/benchmark.c:164:39: note: not consecutive access _39 = *_603;
backend/benchmark.c:164:39: note: not consecutive access *_601 = _293;
backend/benchmark.c:164:39: note: not consecutive access *_659 = _39;
backend/benchmark.c:164:39: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:164:4: note: not consecutive access _893 = *_902;
backend/benchmark.c:164:4: note: not consecutive access _882 = *_891;
backend/benchmark.c:164:4: note: not consecutive access *_911 = _893;
backend/benchmark.c:164:4: note: not consecutive access *_892 = _882;
backend/benchmark.c:164:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:164:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: vect__176.70_630 = MEM[(double *)vectp.68_264];
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.71_275] = vect__176.70_630;
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: vect__209.75_280 = MEM[(double *)vectp.73_278];
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.76_281] = vect__209.75_280;
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:163:3: note: not consecutive access pretmp_1020 = *qcode_444;
backend/benchmark.c:163:3: note: not consecutive access pretmp_1022 = pretmp_1020->nlogs;
backend/benchmark.c:163:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:169:26: note: not consecutive access _200 = *_199;
backend/benchmark.c:169:26: note: not consecutive access _207 = *_206;
backend/benchmark.c:169:26: note: not consecutive access pretmp_1172 = *_1171;
backend/benchmark.c:169:26: note: not consecutive access _195 = *_100;
backend/benchmark.c:169:26: note: not consecutive access _205 = *_204;
backend/benchmark.c:169:26: note: not consecutive access pretmp_1174 = pretmp_1172->nlogs;
backend/benchmark.c:169:26: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:169:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:169:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:169:26: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: vect__710.56_1075 = MEM[(double *)vectp.54_1080];
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.57_1076] = vect__710.56_1075;
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: vect__1142.61_1071 = MEM[(double *)vectp.59_1069];
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.62_1065] = vect__1142.61_1071;
 scalar_type: vector(2) double
backend/benchmark.c:169:33: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:169:33: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:164:39: note: not consecutive access _1119 = *_1120;
backend/benchmark.c:164:39: note: not consecutive access _1101 = *_1103;
backend/benchmark.c:164:39: note: not consecutive access *_1121 = _1119;
backend/benchmark.c:164:39: note: not consecutive access *_1102 = _1101;
backend/benchmark.c:164:39: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:164:4: note: not consecutive access _1149 = *_1150;
backend/benchmark.c:164:4: note: not consecutive access _1141 = *_1147;
backend/benchmark.c:164:4: note: not consecutive access *_1162 = _1149;
backend/benchmark.c:164:4: note: not consecutive access *_1148 = _1141;
backend/benchmark.c:164:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:172:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:176:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:173:4: note: not consecutive access _221 = *_220;
backend/benchmark.c:173:4: note: not consecutive access _217 = *_216;
backend/benchmark.c:173:4: note: not consecutive access _218 = *_100;
backend/benchmark.c:173:4: note: not consecutive access _219 = _218->metricsToCompute;
backend/benchmark.c:173:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:172:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:120:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:177:12: note: not consecutive access _226 = *_100;
backend/benchmark.c:177:12: note: not consecutive access _227 = _226->runstats;
backend/benchmark.c:177:12: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:177:12: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:177:27: note: not vectorized: no vectype for stmt: vect__229.47_394 = MEM[(long int *)vectp_stats.45_397];
 scalar_type: vector(2) long int
backend/benchmark.c:177:27: note: not vectorized: no vectype for stmt: MEM[(long int *)vectp.48_393] = vect__229.47_394;
 scalar_type: vector(2) long int
backend/benchmark.c:177:27: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:177:27: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:176:30: note: not consecutive access *_409 = _408;
backend/benchmark.c:176:30: note: not consecutive access _408 = *_410;
backend/benchmark.c:176:30: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:176:3: note: not consecutive access *_423 = _422;
backend/benchmark.c:176:3: note: not consecutive access _422 = *_424;
backend/benchmark.c:176:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:17:20: note: not consecutive access nlogs_533 = _230->nlogs;
backend/benchmark.c:17:20: note: not consecutive access _230 = *qcode_444;
backend/benchmark.c:17:20: note: not consecutive access _233 = *sims_481;
backend/benchmark.c:17:20: note: not consecutive access _231 = *stats_496(D);
backend/benchmark.c:17:20: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:19:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:21:16: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:22:19: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:209:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:209:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:209:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:213:29: note: not consecutive access _671 = *_714;
backend/benchmark.c:213:29: note: not consecutive access *_753 = _752;
backend/benchmark.c:213:29: note: not consecutive access *_707 = _671;
backend/benchmark.c:213:29: note: not consecutive access _752 = *_757;
backend/benchmark.c:213:29: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:213:4: note: not consecutive access _767 = *_769;
backend/benchmark.c:213:4: note: not consecutive access *_775 = _774;
backend/benchmark.c:213:4: note: not consecutive access *_768 = _767;
backend/benchmark.c:213:4: note: not consecutive access _774 = *_779;
backend/benchmark.c:213:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:213:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:215:70: note: not vectorized: no vectype for stmt: vect__263.33_640 = MEM[(double *)vectp.31_646];
 scalar_type: vector(2) double
backend/benchmark.c:215:70: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.34_626] = vect__263.33_640;
 scalar_type: vector(2) double
backend/benchmark.c:215:70: note: not vectorized: no vectype for stmt: vect__283.38_609 = MEM[(double *)vectp.36_617];
 scalar_type: vector(2) double
backend/benchmark.c:215:70: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.39_596] = vect__283.38_609;
 scalar_type: vector(2) double
backend/benchmark.c:215:70: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:212:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:215:113: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:209:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:215:91: note: not consecutive access _244 = *_243;
backend/benchmark.c:215:91: note: not consecutive access _267 = *_266;
backend/benchmark.c:215:91: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:221:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:224:52: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:225:4: note: not consecutive access *_299 = _300;
backend/benchmark.c:225:4: note: not consecutive access *_306 = _307;
backend/benchmark.c:225:4: note: not consecutive access _289 = *_288;
backend/benchmark.c:225:4: note: not consecutive access _303 = *_302;
backend/benchmark.c:225:4: note: not consecutive access _300 = *_292;
backend/benchmark.c:225:4: note: not consecutive access _307 = *_304;
backend/benchmark.c:225:4: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:227:67: note: not consecutive access _311 = *_310;
backend/benchmark.c:227:67: note: not consecutive access _313 = *_312;
backend/benchmark.c:227:67: note: not consecutive access _309 = _233->bins;
backend/benchmark.c:227:67: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:227:67: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:226:5: note: not consecutive access *_1100 = _660;
backend/benchmark.c:226:5: note: not consecutive access _660 = *_695;
backend/benchmark.c:226:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:226:5: note: not consecutive access *_679 = _991;
backend/benchmark.c:226:5: note: not consecutive access _991 = *_235;
backend/benchmark.c:226:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:226:30: note: not consecutive access *_866 = _865;
backend/benchmark.c:226:30: note: not consecutive access _865 = *_885;
backend/benchmark.c:226:30: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:226:5: note: not consecutive access *_909 = _907;
backend/benchmark.c:226:5: note: not consecutive access _907 = *_917;
backend/benchmark.c:226:5: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:226:5: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:227:119: note: not vectorized: no vectype for stmt: vect__336.24_855 = MEM[(int *)vectp.22_857];
 scalar_type: vector(4) int
backend/benchmark.c:227:119: note: not vectorized: no vectype for stmt: MEM[(int *)vectp.25_851] = vect__336.24_855;
 scalar_type: vector(4) int
backend/benchmark.c:227:119: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:225:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:227:102: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:222:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:229:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:221:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:230:21: note: not consecutive access _342 = *_341;
backend/benchmark.c:230:21: note: not consecutive access _338 = _233->runavg;
backend/benchmark.c:230:21: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:230:21: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:230:36: note: not vectorized: no vectype for stmt: vect__353.15_976 = MEM[(double *)vectp.13_978];
 scalar_type: vector(2) double
backend/benchmark.c:230:36: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.16_966] = vect__353.15_976;
 scalar_type: vector(2) double
backend/benchmark.c:230:36: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:230:36: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:229:30: note: not consecutive access *_1015 = _1014;
backend/benchmark.c:229:30: note: not consecutive access _1014 = *_1046;
backend/benchmark.c:229:30: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:229:3: note: not consecutive access *_1082 = _1081;
backend/benchmark.c:229:3: note: not consecutive access _1081 = *_1086;
backend/benchmark.c:229:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:222:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:243:3: note: not consecutive access _360 = *_359;
backend/benchmark.c:243:3: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:244:6: note: not consecutive access _361 = *_359;
backend/benchmark.c:244:6: note: not consecutive access _362 = _361->hybrid;
backend/benchmark.c:244:6: note: not vectorized: no grouped stores in basic block.
backend/benchmark.c:245:4: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:242:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:242:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:250:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:251:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:252:3: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:250:2: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:150:6: note: not vectorized: not enough data-refs in basic block.
backend/benchmark.c:96:13: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:65:3: note: bad data references.
backend/linalg.c:66:4: note: versioning for alias required: can't determine dependence between *C.2_71[_42].imag and REALPART_EXPR <*_52>
backend/linalg.c:66:4: note: versioning for alias required: can't determine dependence between *C.2_71[_42].imag and IMAGPART_EXPR <*_52>
backend/linalg.c:66:4: note: versioning for alias required: can't determine dependence between *C.2_71[_42].real and REALPART_EXPR <*_52>
backend/linalg.c:66:4: note: versioning for alias required: can't determine dependence between *C.2_71[_42].real and IMAGPART_EXPR <*_52>
backend/linalg.c:66:4: note: Build SLP failed: different operation in stmt _87 = *C.2_71[_42].imag;
backend/linalg.c:66:4: note: original stmt _45 = _43 + _44;
backend/linalg.c:66:4: note: vector alignment may not be reachable
backend/linalg.c:66:4: note: not ssa-name.
backend/linalg.c:66:4: note: use not simple.
backend/linalg.c:66:4: note: not ssa-name.
backend/linalg.c:66:4: note: use not simple.
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/linalg.c:66:4: note: not ssa-name.
backend/linalg.c:66:4: note: use not simple.
backend/linalg.c:66:4: note: not ssa-name.
backend/linalg.c:66:4: note: use not simple.
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:66:4: note: no array mode for V2DF[2]
backend/linalg.c:52:3: note: bad data references.
backend/linalg.c:53:4: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_36> and *B.1_67[_38].real
backend/linalg.c:53:4: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_36> and *B.1_67[_38].imag
backend/linalg.c:53:4: note: versioning for alias required: can't determine dependence between *B.1_67[_38].real and IMAGPART_EXPR <*_36>
backend/linalg.c:53:4: note: versioning for alias required: can't determine dependence between IMAGPART_EXPR <*_36> and *B.1_67[_38].imag
backend/linalg.c:53:4: note: vector alignment may not be reachable
backend/linalg.c:53:4: note: not ssa-name.
backend/linalg.c:53:4: note: use not simple.
backend/linalg.c:53:4: note: not ssa-name.
backend/linalg.c:53:4: note: use not simple.
backend/linalg.c:53:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/linalg.c:46:3: note: bad data references.
backend/linalg.c:47:4: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_25> and *A.0_63[_27].real
backend/linalg.c:47:4: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_25> and *A.0_63[_27].imag
backend/linalg.c:47:4: note: versioning for alias required: can't determine dependence between *A.0_63[_27].real and IMAGPART_EXPR <*_25>
backend/linalg.c:47:4: note: versioning for alias required: can't determine dependence between IMAGPART_EXPR <*_25> and *A.0_63[_27].imag
backend/linalg.c:47:4: note: vector alignment may not be reachable
backend/linalg.c:47:4: note: not ssa-name.
backend/linalg.c:47:4: note: use not simple.
backend/linalg.c:47:4: note: not ssa-name.
backend/linalg.c:47:4: note: use not simple.
backend/linalg.c:47:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/linalg.c:40:5: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:44:17: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:44:35: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:44:53: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:46:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:46:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:46:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:48:27: note: not vectorized: no vectype for stmt: vect__28.38_247 = MEM[(double *)vectp.36_245];
 scalar_type: vector(2) double
backend/linalg.c:48:27: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_A.39_251] = vect__28.38_247;
 scalar_type: vector(2) double
backend/linalg.c:48:27: note: not vectorized: no grouped stores in basic block.
backend/linalg.c:47:4: note: not ssa-name.
backend/linalg.c:47:4: note: use not simple.
backend/linalg.c:47:4: note: not ssa-name.
backend/linalg.c:47:4: note: use not simple.
backend/linalg.c:46:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:48:9: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:48:9: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:54:27: note: not vectorized: no vectype for stmt: vect__39.32_210 = MEM[(double *)vectp.30_208];
 scalar_type: vector(2) double
backend/linalg.c:54:27: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_B.33_214] = vect__39.32_210;
 scalar_type: vector(2) double
backend/linalg.c:54:27: note: not vectorized: no grouped stores in basic block.
backend/linalg.c:53:4: note: not ssa-name.
backend/linalg.c:53:4: note: use not simple.
backend/linalg.c:53:4: note: not ssa-name.
backend/linalg.c:53:4: note: use not simple.
backend/linalg.c:52:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:52:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:54:9: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:63:3: note: misalign = 0 bytes of ref alpha.real
backend/linalg.c:63:3: note: misalign = 0 bytes of ref beta.real
backend/linalg.c:65:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:65:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:67:16: note: not vectorized: no vectype for stmt: vect__87.23_130 = MEM[(double *)vectp_C.21_134];
 scalar_type: vector(2) double
backend/linalg.c:67:16: note: not vectorized: no vectype for stmt: vect__87.24_132 = MEM[(double *)vectp_C.21_131];
 scalar_type: vector(2) double
backend/linalg.c:67:16: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.27_173] = vect_inter_high_175;
 scalar_type: vector(2) double
backend/linalg.c:67:16: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.27_178] = vect_inter_low_176;
 scalar_type: vector(2) double
backend/linalg.c:67:16: note: not vectorized: no grouped stores in basic block.
backend/linalg.c:67:16: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:66:29: note: Build SLP failed: different operation in stmt _17 = *C.2_71[_18].imag;
backend/linalg.c:66:29: note: original stmt _11 = _15 + _13;
backend/linalg.c:66:4: note: Build SLP failed: different operation in stmt _139 = *C.2_71[_140].imag;
backend/linalg.c:66:4: note: original stmt _135 = _138 + _136;
backend/linalg.c:65:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:65:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:67:9: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:20:6: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:69:1: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:63:3: note: misalign = 0 bytes of ref alpha.real
backend/linalg.c:63:3: note: misalign = 0 bytes of ref beta.real
backend/linalg.c:52:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:63:3: note: misalign = 0 bytes of ref alpha.real
backend/linalg.c:63:3: note: misalign = 0 bytes of ref beta.real
backend/linalg.c:52:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:111:3: note: not vectorized: control flow in loop.
backend/linalg.c:111:3: note: bad loop form.
backend/linalg.c:114:5: note: versioning for alias required: can't determine dependence between *vr.10_56[_38].imag and REALPART_EXPR <*_47>
backend/linalg.c:114:5: note: versioning for alias required: can't determine dependence between *vr.10_56[_38].imag and IMAGPART_EXPR <*_47>
backend/linalg.c:114:5: note: versioning for alias required: can't determine dependence between *vr.10_56[_38].real and REALPART_EXPR <*_47>
backend/linalg.c:114:5: note: versioning for alias required: can't determine dependence between *vr.10_56[_38].real and IMAGPART_EXPR <*_47>
backend/linalg.c:114:5: note: Build SLP failed: different operation in stmt _72 = *vr.10_56[_38].imag;
backend/linalg.c:114:5: note: original stmt _41 = _39 + _40;
backend/linalg.c:114:5: note: vector alignment may not be reachable
backend/linalg.c:114:5: note: not ssa-name.
backend/linalg.c:114:5: note: use not simple.
backend/linalg.c:114:5: note: not ssa-name.
backend/linalg.c:114:5: note: use not simple.
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/linalg.c:114:5: note: not ssa-name.
backend/linalg.c:114:5: note: use not simple.
backend/linalg.c:114:5: note: not ssa-name.
backend/linalg.c:114:5: note: use not simple.
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:114:5: note: no array mode for V2DF[2]
backend/linalg.c:99:2: note: bad data references.
backend/linalg.c:100:3: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_25> and *a.11_58[_27].real
backend/linalg.c:100:3: note: versioning for alias required: can't determine dependence between REALPART_EXPR <*_25> and *a.11_58[_27].imag
backend/linalg.c:100:3: note: versioning for alias required: can't determine dependence between *a.11_58[_27].real and IMAGPART_EXPR <*_25>
backend/linalg.c:100:3: note: versioning for alias required: can't determine dependence between IMAGPART_EXPR <*_25> and *a.11_58[_27].imag
backend/linalg.c:100:3: note: vector alignment may not be reachable
backend/linalg.c:100:3: note: not ssa-name.
backend/linalg.c:100:3: note: use not simple.
backend/linalg.c:100:3: note: not ssa-name.
backend/linalg.c:100:3: note: use not simple.
backend/linalg.c:100:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/linalg.c:96:16: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:96:26: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:99:2: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:101:8: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:101:8: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:101:26: note: not vectorized: no vectype for stmt: vect__28.157_179 = MEM[(double *)vectp.155_177];
 scalar_type: vector(2) double
backend/linalg.c:101:26: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_a.158_183] = vect__28.157_179;
 scalar_type: vector(2) double
backend/linalg.c:101:26: note: not vectorized: no grouped stores in basic block.
backend/linalg.c:100:3: note: not ssa-name.
backend/linalg.c:100:3: note: use not simple.
backend/linalg.c:100:3: note: not ssa-name.
backend/linalg.c:100:3: note: use not simple.
backend/linalg.c:99:2: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:106:5: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:108:10: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:111:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:109:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:113:7: note: Build SLP failed: different operation in stmt _68 = *w.8_50[i_80].imag;
backend/linalg.c:113:7: note: original stmt _33 = _31 + _32;
backend/linalg.c:115:13: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:115:13: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:115:20: note: not vectorized: no vectype for stmt: vect__72.148_104 = MEM[(double *)vectp_vr.146_108];
 scalar_type: vector(2) double
backend/linalg.c:115:20: note: not vectorized: no vectype for stmt: vect__72.149_106 = MEM[(double *)vectp_vr.146_105];
 scalar_type: vector(2) double
backend/linalg.c:115:20: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.152_142] = vect_inter_high_144;
 scalar_type: vector(2) double
backend/linalg.c:115:20: note: not vectorized: no vectype for stmt: MEM[(double *)vectp.152_147] = vect_inter_low_145;
 scalar_type: vector(2) double
backend/linalg.c:115:20: note: not vectorized: no grouped stores in basic block.
backend/linalg.c:115:20: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:114:30: note: Build SLP failed: different operation in stmt _14 = *vr.10_56[_15].imag;
backend/linalg.c:114:30: note: original stmt _10 = _13 + _12;
backend/linalg.c:114:5: note: Build SLP failed: different operation in stmt _94 = *vr.10_56[_96].imag;
backend/linalg.c:114:5: note: original stmt _91 = _93 + _92;
backend/linalg.c:111:3: note: not vectorized: not enough data-refs in basic block.
backend/linalg.c:119:1: note: not vectorized: not enough data-refs in basic block.

backend/sampling.c:24:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:24:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:24:2: note: not ssa-name.
backend/sampling.c:24:2: note: use not simple.
backend/sampling.c:24:2: note: not ssa-name.
backend/sampling.c:24:2: note: use not simple.
backend/sampling.c:24:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:22:2: note: step unknown.
backend/sampling.c:22:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:22:2: note: not ssa-name.
backend/sampling.c:22:2: note: use not simple.
backend/sampling.c:22:2: note: not ssa-name.
backend/sampling.c:22:2: note: use not simple.
backend/sampling.c:22:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:22:2: note: reduc op not supported by target.
backend/sampling.c:22:2: note: reduc op not supported by target.
backend/sampling.c:15:3: note: not vectorized: loop contains function calls or data references that cannot be analyzed
backend/sampling.c:18:3: note: Unknown misalignment, naturally aligned
backend/sampling.c:18:3: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:14:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:18:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:15:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:16:17: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:15:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:15:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:15:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:15: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_impdist.22_116] = vect_cst__115;
 scalar_type: vector(2) double
backend/sampling.c:19:15: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:19:15: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:18:29: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:18:29: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:22:28: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:23:8: note: not vectorized: no vectype for stmt: vect__30.16_92 = MEM[(double *)vectp_impdist.14_90];
 scalar_type: vector(2) double
backend/sampling.c:23:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:23:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:23:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:25:14: note: not vectorized: no vectype for stmt: vect__38.6_26 = MEM[(double *)vectp_impdist.4_39];
 scalar_type: vector(2) double
backend/sampling.c:25:14: note: not vectorized: no vectype for stmt: MEM[(double *)vectp_impdist.8_13] = vect__40.7_14;
 scalar_type: vector(2) double
backend/sampling.c:25:14: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:25:14: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:24:28: note: not consecutive access _61 = *_62;
backend/sampling.c:24:28: note: not consecutive access *_62 = _60;
backend/sampling.c:24:28: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:27:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:27:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:27:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:33:2: note: not vectorized, possible dependence between data-refs backend/sampling.c:33:2: note: bad data dependence.
backend/sampling.c:33:2: note: not consecutive access _1 = *dist_14(D);
backend/sampling.c:33:2: note: not consecutive access *cumul_15(D) = _1;
backend/sampling.c:33:2: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:33:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:33:2: note: not consecutive access _8 = *_7;
backend/sampling.c:33:2: note: not consecutive access *_9 = _10;
backend/sampling.c:33:2: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:35:1: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:44:26: note: not vectorized: control flow in loop.
backend/sampling.c:44:26: note: bad loop form.
backend/sampling.c:44:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:45:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:45:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:44:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:44:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:53:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:54:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:54:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:72:57: note: not vectorized: multiple nested loops.
backend/sampling.c:72:57: note: bad loop form.
backend/sampling.c:106:4: note: not vectorized: control flow in loop.
backend/sampling.c:106:4: note: bad loop form.
backend/sampling.c:90:3: note: not vectorized: control flow in loop.
backend/sampling.c:90:3: note: bad loop form.
backend/sampling.c:77:2: note: Unknown misalignment, naturally aligned
backend/sampling.c:77:2: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
backend/sampling.c:75:14: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:73:22: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:77:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:81:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:81:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:81:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:11: note: not vectorized: no vectype for stmt: MEM[(int *)vectp_incl.73_120] = { 1, 1, 1, 1 };
 scalar_type: vector(4) int
backend/sampling.c:78:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:78:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:77:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:77:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:77:26: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:81:23: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:90:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:91:7: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:92:10: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:90:3: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:94:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:101:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:106:4: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:107:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:108:11: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:106:4: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:53:5: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:56:6: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:117:17: note: not consecutive access pretmp_114 = *searchin_35(D);
backend/sampling.c:117:17: note: not consecutive access MEM[(double *)searchin_35(D) + 8B] = exponent_92;
backend/sampling.c:117:17: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:123:17: note: not consecutive access pretmp_116 = MEM[(double *)searchin_35(D) + 8B];
backend/sampling.c:123:17: note: not consecutive access *searchin_35(D) = exponent_92;
backend/sampling.c:123:17: note: not vectorized: no grouped stores in basic block.
backend/sampling.c:100:8: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:134:2: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:87:25: note: not vectorized: not enough data-refs in basic block.
backend/sampling.c:87:25: note: not vectorized: not enough data-refs in basic block.
